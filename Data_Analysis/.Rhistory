setwd('G:/Dan_Lab/codes/CAZyme/CAZYme_Analysis/Data_Analysis/')
# set the path for root directory
setwd("G:/Dan_Lab/dietstudy_analyses-master/")
#### load the maps for downstream use ####
# full sample map - every possible sample
map <- read.table("data/maps/SampleID_map.txt", sep = "\t", header = T, comment = "")
# Determining clustering for order
# import average microbime per person for clustering
# here we use the normalized values for determing clustering from Bray Curtis distances
# These are used over the compositionally corrected relative abundances because they make more sense visually
microbes <- read.delim("data/microbiome/processed_average/UN_taxonomy_norm_s.txt", row = 1)
# create normalized sqrt relative abundance
# cluster by sqrt becuase it takes better into account lower abundance microbes
# also results in nice ordering
microbes.sq <- sweep(sqrt(microbes), 2, colSums(sqrt(microbes)), "/")
# create distance matrix for clustering
# using bray becuase it works well for grouping the prevotella dominant people on one side of the dendrogram
mydist <- vegdist(t(microbes.sq), method = "bray")
myclust <- hclust(mydist, method = "average")
require(rmarkdown)
require(knitr)
require(tidyverse)
require(RColorBrewer)
require(cowplot)
require(reshape2)
require(ggdendro)
require(vegan)
require(gridExtra)
# create distance matrix for clustering
# using bray becuase it works well for grouping the prevotella dominant people on one side of the dendrogram
mydist <- vegdist(t(microbes.sq), method = "bray")
myclust <- hclust(mydist, method = "average")
order <- myclust$order
microbes <- microbes[,order]
ord_factor <- as.character(colnames(microbes))
setwd('G:/Dan_Lab/codes/CAZyme/CAZYme_Analysis/Data_Analysis/')
save.image("G:/Dan_Lab/codes/CAZyme/CAZYme_Analysis/Data_Analysis/codes/order.RData")
load("./codes/order.RData")
cazyme <- read.table('./data/Cazyme_total.txt',sep='\t',header = T,row.names = 1)
map <- read.table("./maps/SampleID_map.txt", sep = "\t", header = T, comment = "")
rownames(cazyme) <- gsub(".*;L4_",'',rownames(cazyme))
#nomalization
cazyme <- sweep(cazyme,2,colSums(cazyme),'/')
#order by mean value
cazyme <- cazyme[order(rowMeans(cazyme),decreasing = F),]
#generate plotting table
plot1 <- as.data.frame(t(cazyme))
plot1 <- rownames_to_column(plot1,var='X.SampleID')
plot1 <- melt(plot1,id = 'X.SampleID',variable.name = 'cazyme')
plot1 <- merge(plot1,map,by = 'X.SampleID')
# get right number of colors for plotting
no_cols <- length(unique(plot1$cazyme))
mycols <- runif(10,min=1,max=length(colors()))   #随机产生10个颜色数组中颜色
#change the order
plot1$UserName <- gsub("MCTs", "", plot1$UserName)
plot1$UserName <- factor(plot1$UserName, levels = ord_factor)
cazyme_plot <- ggplot(data = plot1, aes(x=StudyDayNo, y = value, fill=cazyme)) +
geom_area(stat = "identity") +
facet_grid(.~UserName, scales = "free") +
scale_fill_manual(values = colors_func) +
scale_x_discrete(drop = FALSE) +
theme_classic() +
theme(strip.text.x = element_blank(),
axis.text.x = element_text(angle = 45, hjust = 1),
axis.text.y = element_text(size = 9),
axis.title = element_text(size = 9),
plot.title = element_text(hjust = 0.5),
axis.title.x = element_blank(),
strip.background = element_blank(),
legend.position = "bottom",
legend.text = element_text(size = 7),
legend.title = element_blank(),
panel.spacing.x=unit(0.05, "lines")) +
guides(fill = guide_legend(reverse = TRUE,
keywidth = 0.5,
keyheight = 0.5,
nrow = 5)) +
#nrow = 5)) +
ylab("Relative Abundance")
cazyme_plot <- ggplot(data = plot1, aes(x=StudyDayNo, y = value, fill=cazyme)) +
geom_area(stat = "identity") +
facet_grid(.~UserName, scales = "free") +
scale_fill_manual(values = mycols) +
scale_x_discrete(drop = FALSE) +
theme_classic() +
theme(strip.text.x = element_blank(),
axis.text.x = element_text(angle = 45, hjust = 1),
axis.text.y = element_text(size = 9),
axis.title = element_text(size = 9),
plot.title = element_text(hjust = 0.5),
axis.title.x = element_blank(),
strip.background = element_blank(),
legend.position = "bottom",
legend.text = element_text(size = 7),
legend.title = element_blank(),
panel.spacing.x=unit(0.05, "lines")) +
guides(fill = guide_legend(reverse = TRUE,
keywidth = 0.5,
keyheight = 0.5,
nrow = 5)) +
#nrow = 5)) +
ylab("Relative Abundance")
ggsave("./result/cazy.tiff",width=20,height=10,dpi = 600)
mycols <- runif(no_cols,min=1,max=length(colors()))   #随机产生10个颜色数组中颜色
cazyme_plot <- ggplot(data = plot1, aes(x=StudyDayNo, y = value, fill=cazyme)) +
geom_area(stat = "identity") +
facet_grid(.~UserName, scales = "free") +
scale_fill_manual(values = mycols) +
scale_x_discrete(drop = FALSE) +
theme_classic() +
theme(strip.text.x = element_blank(),
axis.text.x = element_text(angle = 45, hjust = 1),
axis.text.y = element_text(size = 9),
axis.title = element_text(size = 9),
plot.title = element_text(hjust = 0.5),
axis.title.x = element_blank(),
strip.background = element_blank(),
legend.position = "bottom",
legend.text = element_text(size = 7),
legend.title = element_blank(),
panel.spacing.x=unit(0.05, "lines")) +
guides(fill = guide_legend(reverse = TRUE,
keywidth = 0.5,
keyheight = 0.5,
nrow = 5)) +
#nrow = 5)) +
ylab("Relative Abundance")
cazyme_plot
ggsave("./result/cazy.tiff",width=20,height=10,dpi = 600)
#colors_func <- sample(cols_func(no_cols))
colors_func <- sample(pal, no_cols,replace = T)
pal <- rev(c("#ff40f2", "#ff0000", "#008c4b", "#00138c", "#8c235b", "#ffbfbf", "#8c7723", "#468c75", "#8091ff", "#ff80c4", "#8c3123", "#fff2bf", "#40fff2", "#69698c", "#ff0044", "#ff9180", "#e5ff80", "#bffbff", "#5940ff", "#8c696e", "#8c7369", "#858c69", "#40d9ff", "#c480ff", "#ff8c40", "#4b8c00", "#23698c", "#69238c", "#8c4b00", "#bfffbf", "#004b8c", "#eabfff", "#ffc480", "#40ff59", "#80c4ff", "#ffd940" ))
#colors_func <- sample(cols_func(no_cols))
colors_func <- sample(pal, no_cols,replace = T)
cazyme_plot <- ggplot(data = plot1, aes(x=StudyDayNo, y = value, fill=cazyme)) +
geom_area(stat = "identity") +
facet_grid(.~UserName, scales = "free") +
scale_fill_manual(values = colors_func) +
scale_x_discrete(drop = FALSE) +
theme_classic() +
theme(strip.text.x = element_blank(),
axis.text.x = element_text(angle = 45, hjust = 1),
axis.text.y = element_text(size = 9),
axis.title = element_text(size = 9),
plot.title = element_text(hjust = 0.5),
axis.title.x = element_blank(),
strip.background = element_blank(),
legend.position = "bottom",
legend.text = element_text(size = 7),
legend.title = element_blank(),
panel.spacing.x=unit(0.05, "lines")) +
guides(fill = guide_legend(reverse = TRUE,
keywidth = 0.5,
keyheight = 0.5,
nrow = 5)) +
#nrow = 5)) +
ylab("Relative Abundance")
ggsave("./result/cazy.tiff",width=20,height=10,dpi = 600)
View(plot1)
setwd('G:/Dan_Lab/codes/CAZyme/CAZYme_Analysis/Data_Analysis/')
load("./codes/order.RData")
cazyme <- read.table('./data/Cazyme_total.txt',sep='\t',header = T,row.names = 1)
map <- read.table("./maps/SampleID_map.txt", sep = "\t", header = T, comment = "")
rownames(cazyme) <- gsub(".*;L4_",'',rownames(cazyme))
#nomalization
cazyme <- sweep(cazyme,2,colSums(cazyme),'/')
#order by mean value
cazyme <- cazyme[order(rowMeans(cazyme),decreasing = F),]
#generate plotting table
plot1 <- as.data.frame(t(cazyme))
plot1 <- rownames_to_column(plot1,var='X.SampleID')
plot1 <- melt(plot1,id = 'X.SampleID',variable.name = 'cazyme')
plot1 <- merge(plot1,map,by = 'X.SampleID')
# get right number of colors for plotting
no_cols <- length(unique(plot1$cazyme))
#colors_func <- sample(cols_func(no_cols))
colors_func <- sample(pal, no_cols,replace = T)
#change the order
plot1$UserName <- gsub("MCTs", "", plot1$UserName)
#generate plotting table
plot1 <- as.data.frame(t(cazyme))
plot1 <- rownames_to_column(plot1,var='X.SampleID')
plot1 <- melt(plot1,id = 'X.SampleID',variable.name = 'cazyme')
plot1 <- merge(plot1,map,by = 'X.SampleID')
# get right number of colors for plotting
no_cols <- length(unique(plot1$cazyme))
#colors_func <- sample(cols_func(no_cols))
colors_func <- sample(pal, no_cols,replace = T)
#change the order
plot1$UserName <- factor(plot1$UserName, levels = ord_factor)
cazyme_plot <- ggplot(data = plot1, aes(x=StudyDayNo, y = value, fill=cazyme)) +
geom_area(stat = "identity") +
facet_grid(.~UserName, scales = "free") +
scale_fill_manual(values = mycols) +
scale_x_discrete(drop = FALSE) +
theme_classic() +
theme(strip.text.x = element_blank(),
axis.text.x = element_text(angle = 45, hjust = 1),
axis.text.y = element_text(size = 9),
axis.title = element_text(size = 9),
plot.title = element_text(hjust = 0.5),
axis.title.x = element_blank(),
strip.background = element_blank(),
legend.position = "bottom",
legend.text = element_text(size = 7),
legend.title = element_blank(),
panel.spacing.x=unit(0.05, "lines")) +
guides(fill = guide_legend(reverse = TRUE,
keywidth = 0.5,
keyheight = 0.5,
nrow = 5)) +
#nrow = 5)) +
ylab("Relative Abundance")
ggsave("./result/cazy.tiff",width=20,height=10,dpi = 600)
length(colors())
mycols <- sample(no_cols,min=1,max=length(colors()))
mycols <- sample(colors(),no_cols)
cazyme_plot <- ggplot(data = plot1, aes(x=StudyDayNo, y = value, fill=cazyme)) +
geom_area(stat = "identity") +
facet_grid(.~UserName, scales = "free") +
scale_fill_manual(values = mycols) +
scale_x_discrete(drop = FALSE) +
theme_classic() +
theme(strip.text.x = element_blank(),
axis.text.x = element_text(angle = 45, hjust = 1),
axis.text.y = element_text(size = 9),
axis.title = element_text(size = 9),
plot.title = element_text(hjust = 0.5),
axis.title.x = element_blank(),
strip.background = element_blank(),
legend.position = "bottom",
legend.text = element_text(size = 7),
legend.title = element_blank(),
panel.spacing.x=unit(0.05, "lines")) +
guides(fill = guide_legend(reverse = TRUE,
keywidth = 0.5,
keyheight = 0.5,
nrow = 5)) +
#nrow = 5)) +
ylab("Relative Abundance")
ggsave("./result/cazy.tiff",width=20,height=10,dpi = 600)
View(plot1)
View(cazyme)
#draw the heatmap
heat1 <- as.data.frame(t(cazyme))
View(heat1)
heat1 <- rownames_to_column(heat1,var='X.SampleID')
heat1 <- merge(heat1,map,by = 'X.SampleID')
View(heat1)
print(i)
for(i in unique(heat1$UserName)){
print(i)
}
heat_temp <- heat1[heat1$UserName==i,]
View(heat_temp)
View(cazyme)
cazyme_family <- rownames(cazyme)
heat_temp <- heat1[heat1$UserName==i,] %>% select(cazyme_family)
for(i in unique(heat1$UserName)){
print(i)
heat_temp <- heat1[heat1$UserName==i,] %>% select(cazyme_family,'StudyDayNo')
}
}
for(i in unique(heat1$UserName)){
print(i)
heat_temp <- heat1[heat1$UserName==i,] %>% select('StudyDayNo',cazyme_family)
}
heat_temp <- column_to_rownames(heat_temp,var = 'StudyDayNo')
for(i in unique(heat1$UserName)){
print(i)
heat_temp <- heat1[heat1$UserName==i,] %>% select('StudyDayNo',cazyme_family)
heat_temp <- column_to_rownames(heat_temp,var = 'StudyDayNo')
}
for(i in unique(heat1$UserName)){
print(i)
heat_temp <- heat1[heat1$UserName==i,] %>% select('StudyDayNo',cazyme_family)
heat_temp <- column_to_rownames(heat_temp,var = 'StudyDayNo')
}
rownames(heat_temp) <- heat_temp$StudyDayNo
heat_temp <- heat_temp[-'StudyDayNo']
for(i in unique(heat1$UserName)){
print(i)
heat_temp <- heat1[heat1$UserName==i,] %>% select('StudyDayNo',cazyme_family)
rownames(heat_temp) <- heat_temp$StudyDayNo
heat_temp <- heat_temp[-1]
}
setwd('G:/Dan_Lab/codes/CAZyme/CAZYme_Analysis/Data_Analysis/')
load("./codes/order.RData")
cazyme <- read.table('./data/Cazyme_total.txt',sep='\t',header = T,row.names = 1)
map <- read.table("./maps/SampleID_map.txt", sep = "\t", header = T, comment = "")
pal <- rev(c("#ff40f2", "#ff0000", "#008c4b", "#00138c", "#8c235b", "#ffbfbf", "#8c7723", "#468c75", "#8091ff", "#ff80c4", "#8c3123", "#fff2bf", "#40fff2", "#69698c", "#ff0044", "#ff9180", "#e5ff80", "#bffbff", "#5940ff", "#8c696e", "#8c7369", "#858c69", "#40d9ff", "#c480ff", "#ff8c40", "#4b8c00", "#23698c", "#69238c", "#8c4b00", "#bfffbf", "#004b8c", "#eabfff", "#ffc480", "#40ff59", "#80c4ff", "#ffd940" ))
rownames(cazyme) <- gsub(".*;L4_",'',rownames(cazyme))
#draw the heatmap
heat1 <- as.data.frame(t(cazyme))
heat1 <- rownames_to_column(heat1,var='X.SampleID')
heat1 <- merge(heat1,map,by = 'X.SampleID')
cazyme_family <- rownames(cazyme)
for(i in unique(heat1$UserName)){
print(i)
heat_temp <- heat1[heat1$UserName==i,] %>% select('StudyDayNo',cazyme_family)
rownames(heat_temp) <- heat_temp$StudyDayNo
heat_temp <- heat_temp[-1]
}
heat_temp[heat_temp>0] <- 1
heat_temp <- as.data.frame(t(heat_temp))
View(heat_temp)
require(pheatmap)
pheatmap(heat_temp)
pheatmap(heat_temp,cluster_rows = F)
dev.off()
for(i in unique(heat1$UserName)){
print(i)
heat_temp <- heat1[heat1$UserName==i,] %>% select('StudyDayNo',cazyme_family)
rownames(heat_temp) <- heat_temp$StudyDayNo
heat_temp <- heat_temp[-1]
heat_temp[heat_temp>0] <- 1
heat_temp <- as.data.frame(t(heat_temp))
pdf(paste0(i,'.pdf'),width = 10,height = 12)
pheatmap(heat_temp,cluster_rows = F)
dev.off()
}
for(i in unique(heat1$UserName)){
print(i)
heat_temp <- heat1[heat1$UserName==i,] %>% select('StudyDayNo',cazyme_family)
rownames(heat_temp) <- heat_temp$StudyDayNo
heat_temp <- heat_temp[-1]
heat_temp[heat_temp>0] <- 1
heat_temp <- as.data.frame(t(heat_temp))
pdf(paste0('./result/',i,'.pdf'),width = 5,height = 12)
pheatmap(heat_temp,cluster_cols = F)
dev.off()
}
ggsave("./result/cazy.pdf",width=20,height=10,dpi = 600)
cazyme_plot <- ggplot(data = plot1, aes(x=StudyDayNo, y = value, fill=cazyme)) +
geom_area(stat = "identity") +
facet_grid(.~UserName, scales = "free") +
scale_fill_manual(values = mycols) +
scale_x_discrete(drop = FALSE) +
theme_classic() +
theme(strip.text.x = element_blank(),
axis.text.x = element_text(angle = 45, hjust = 1),
axis.text.y = element_text(size = 9),
axis.title = element_text(size = 9),
plot.title = element_text(hjust = 0.5),
axis.title.x = element_blank(),
strip.background = element_blank(),
legend.position = "bottom",
legend.text = element_text(size = 7),
legend.title = element_blank(),
panel.spacing.x=unit(0.05, "lines")) +
guides(fill = guide_legend(reverse = TRUE,
keywidth = 0.5,
keyheight = 0.5,
nrow = 5)) +
#nrow = 5)) +
ylab("Relative Abundance")
ggsave("./result/cazy.pdf",width=20,height=10,dpi = 600)
