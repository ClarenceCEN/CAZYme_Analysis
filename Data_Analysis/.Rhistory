theme(legend.position = "right",
legend.title = element_blank(),
legend.text = element_text(size = 9),
axis.text = element_text(size = 4),
axis.title = element_text(size=9)) +
guides(color = guide_legend(ncol = 4)) +
annotate("text", x = 40, y = -50, label = paste0("p-value = ",plot_p))
cazyme_all_plot_one_color + theme(legend.position = 'none')
ggsave('./result/ado_test.pdf')
setwd("G:/Dan_Lab/dietstudy_analyses-master/data/procrustes/data_username_decay")
# load datlist (out put from running correlations)
load(file = "G:/Dan_Lab/dietstudy_analyses-master/data/food_v_microbes_per_person_decay.RData")
View(datlist)
setwd("G:/Dan_Lab/dietstudy_analyses-master")
# load map
map <- read.delim(file = "data/maps/SampleID_map.txt")
map <- map[colnames(map) %in% c("X.SampleID", "UserName","StudyDayNo","Diet.Week.Day")]
# load food table for everyone
food <- read.delim("data/processed_food/dhydrt.txt", row = "taxonomy")
# load food table for everyone
food <- read.delim("data/diet/processed_food/dhydrt.txt", row = "taxonomy")
food <- food[,!colnames(food) == "X.FoodID"]
# collapse at different levels?
split <- strsplit(rownames(food),";")
foodStrings <- sapply(split,function(x) paste(x[1:3],collapse=";"))
food<- rowsum(food,foodStrings)
#limit map to the people with mb samples
map <- map[map$X.SampleID %in% colnames(food),]
map <- droplevels(map)
# listify distance matrices by person
list.food<- NULL
for (i in seq_along(unique(map$UserName))){
a <- as.character(unique(map$UserName)[i])
ids <- droplevels(map$X.SampleID[map$UserName == a])
sub.food <- food[,colnames(food) %in% ids]
list.food[[a]] <- sub.food
}
# find repeated correlations across people
mycors.list <- NULL
for (i in seq_along(list.food)) {
mycors <- cor(t(list.food[[i]]), method = "spearman")
mycors[lower.tri(mycors, diag = T)] <- NA
mycors <- melt(mycors, value.name = "correlation")
mycors.p <- corr.test(t(list.food[[i]]), adjust = "fdr", use = "complete")$p
mycors.p[lower.tri(mycors.p, diag = T)] <- NA
mycors.p <- melt(mycors.p, value.name = "fdr_p")
test <- merge(mycors, mycors.p)
test <- test[!is.na(test$correlation),]
test <- test[test$fdr_p < 0.01,]
mycors.list[[i]] <- test
}
require(reshape2)
require(psych)
require(ggpubr)
# load map
map <- read.delim(file = "data/maps/SampleID_map.txt")
map <- map[colnames(map) %in% c("X.SampleID", "UserName","StudyDayNo","Diet.Week.Day")]
# load food table for everyone
food <- read.delim("data/diet/processed_food/dhydrt.txt", row = "taxonomy")
food <- food[,!colnames(food) == "X.FoodID"]
# collapse at different levels?
split <- strsplit(rownames(food),";")
foodStrings <- sapply(split,function(x) paste(x[1:3],collapse=";"))
food<- rowsum(food,foodStrings)
#limit map to the people with mb samples
map <- map[map$X.SampleID %in% colnames(food),]
map <- droplevels(map)
# listify distance matrices by person
list.food<- NULL
for (i in seq_along(unique(map$UserName))){
a <- as.character(unique(map$UserName)[i])
ids <- droplevels(map$X.SampleID[map$UserName == a])
sub.food <- food[,colnames(food) %in% ids]
list.food[[a]] <- sub.food
}
# find repeated correlations across people
mycors.list <- NULL
for (i in seq_along(list.food)) {
mycors <- cor(t(list.food[[i]]), method = "spearman")
mycors[lower.tri(mycors, diag = T)] <- NA
mycors <- melt(mycors, value.name = "correlation")
mycors.p <- corr.test(t(list.food[[i]]), adjust = "fdr", use = "complete")$p
mycors.p[lower.tri(mycors.p, diag = T)] <- NA
mycors.p <- melt(mycors.p, value.name = "fdr_p")
test <- merge(mycors, mycors.p)
test <- test[!is.na(test$correlation),]
test <- test[test$fdr_p < 0.01,]
mycors.list[[i]] <- test
}
foods.cors <- unlist(lapply(mycors.list, function(x) dim(x)[[1]]))
names(foods.cors) <- names(list.food)
mean(foods.cors[foods.cors > 3])
ggqqplot(foods.cors) # approximately normal distributrion
View(food)
setwd('G:/Dan_Lab/codes/CAZyme/CAZYme_Analysis/Data_Analysis/')
cazyme <- read.table('./data/Cazyme_total.txt',sep='\t',header = T,row.names = 1)
map <- read.table("./maps/SampleID_map.txt", sep = "\t", header = T, comment = "")
View(cazyme)
##normalization
cazyme <- sweep(cazyme,1,rowSums(cazyme),'/')
cazyme_t <- as.data.frame(t(cazyme*1.0))
View(cazyme_t)
myimpR = impRZilr(cazyme_t, maxit = 3, method = "lm", dl = rep(0.0000001,ncol(cazyme_t)), verbose = T) # pick a good detection limit...
myimpR = impRZilr(cazyme_t, maxit = 3, method = "lm", dl = rep(0.000000001,ncol(cazyme_t)), verbose = T) # pick a good detection limit...
cazyme <- read.table('./data/Cazyme_total.txt',sep='\t',header = T,row.names = 1)
map <- read.table("./maps/SampleID_map.txt", sep = "\t", header = T, comment = "")
##normalization
cazyme <- sweep(cazyme,1,rowSums(cazyme),'/')
cazyme_clr <- cenLR(t(cazyme)+0.000000000001)$x
View(cazyme_clr)
cazyme_filter <- as.data.frame((cazyme_clr))
cazyme_filter <- rownames_to_column(cazyme_filter,var = 'X.SampleID')
cazyme_filter <- merge(cazyme_filter,map[c('X.SampleID','UserName','StudyDayNo')],by = 'X.SampleID')
co_vars <- aggregate(cazyme_filter[,!names(cazyme_filter)%in%c('X.SampleID','UserName','StudyDayNo')],by=list(cazyme_filter$UserName),FUN=function(x){sd(x)/mean(x)})
co_vars_cazyme <- colMeans(co_vars[-1])
hist(co_vars_cazyme)
cazyme <- read.table('./data/Cazyme_total.txt',sep='\t',header = T,row.names = 1)
map <- read.table("./maps/SampleID_map.txt", sep = "\t", header = T, comment = "")
cazyme <- read.table('./data/Cazyme_total.txt',sep='\t',header = T,row.names = 1)
map <- read.table("./maps/SampleID_map.txt", sep = "\t", header = T, comment = "")
View(cazyme)
##normalization
cazyme <- sweep(cazyme+0.000001,1,rowSums(cazyme+0.000001),'/')
View(cazyme)
cazyme <- read.table('./data/Cazyme_total.txt',sep='\t',header = T,row.names = 1)
map <- read.table("./maps/SampleID_map.txt", sep = "\t", header = T, comment = "")
cazyme <- read.table('./data/Cazyme_total.txt',sep='\t',header = T,row.names = 1)
map <- read.table("./maps/SampleID_map.txt", sep = "\t", header = T, comment = "")
cazyme_filter <- as.data.frame((cazyme_clr))
cazyme <- read.table('./data/Cazyme_total.txt',sep='\t',header = T,row.names = 1)
map <- read.table("./maps/SampleID_map.txt", sep = "\t", header = T, comment = "")
#cazyme_filter <- as.data.frame((cazyme_clr))
cazyme_filter <- as.data.frame((cazyme))
View(cazyme_filter)
#cazyme_filter <- as.data.frame((cazyme_clr))
cazyme_filter <- as.data.frame(t(cazyme))
cazyme_filter <- rownames_to_column(cazyme_filter,var = 'X.SampleID')
cazyme_filter <- merge(cazyme_filter,map[c('X.SampleID','UserName','StudyDayNo')],by = 'X.SampleID')
co_vars <- aggregate(cazyme_filter[,!names(cazyme_filter)%in%c('X.SampleID','UserName','StudyDayNo')],by=list(cazyme_filter$UserName),FUN=function(x){sd(x)/mean(x)})
View(co_vars)
#cazyme_filter <- as.data.frame((cazyme_clr))
cazyme_filter <- as.data.frame(t(cazyme))
View(cazyme_filter)
cazyme_filter <- rownames_to_column(cazyme_filter,var = 'X.SampleID')
cazyme_filter <- merge(cazyme_filter,map[c('X.SampleID','UserName','StudyDayNo')],by = 'X.SampleID')
co_vars <- aggregate(cazyme_filter[,!names(cazyme_filter)%in%c('X.SampleID','UserName','StudyDayNo')],by=list(cazyme_filter$UserName),FUN=function(x){sd(x)/mean(x)})
View(co_vars)
temp <- cazyme_filter[,!names(cazyme_filter)%in%c('X.SampleID','UserName','StudyDayNo')]
View(temp)
co_vars_cazyme <- colMeans(co_vars[-1])
hist(co_vars_cazyme)
co_vars_cazyme[is.nan(co_vars_cazyme)] <- 0
hist(co_vars_cazyme)
co_vars_cazyme
co_vars_cazyme==0
sum(co_vars_cazyme==0)
View(co_vars)
co_vars[is.nan(co_vars)] <- 0
co_vars
class(co_vars)
is.na(co_vars)
co_vars[is.na(co_vars)]
co_vars[is.na(co_vars)]
co_vars[is.naa(co_vars)]
co_vars[is.nan(co_vars)]
co_vars[is.na(co_vars)] <- 0
co_vars_cazyme <- colMeans(co_vars[-1])
order(co_vars_cazyme)
co_vars_cazyme <- co_vars_cazyme[order(co_vars_cazyme)]
co_vars_cazyme
names(co_vars_cazyme )
hist(co_vars_cazyme)
cazyme_to_keep <- names(co_vars_cazyme)[co_vars_cazyme>0.4]
hist(co_vars_cazyme[cazyme_to_keep])
cazyme_to_keep <- names(co_vars_cazyme)[co_vars_cazyme>0.35]
hist(co_vars_cazyme[cazyme_to_keep])
cazyme_to_keep <- names(co_vars_cazyme)[co_vars_cazyme>0.32]
co_vars_cazyme <- colMeans(co_vars[-1])
co_vars_cazyme <- co_vars_cazyme[order(co_vars_cazyme,decreasing = T)]
cazyme_to_keep <- names(co_vars_cazyme)[1:150]
hist(co_vars_cazyme[cazyme_to_keep])
View(cazyme)
View(cazyme_filter)
cazyme_filter <- select(cazyme_filter,c('X.SampleID','UserName','StudyDayNo','cazyme_to_keep'))
cazyme_filter <- select(cazyme_filter,c('X.SampleID','UserName','StudyDayNo',cazyme_to_keep))
cazyme_filter <- as.data.frame(t(cazyme))
cazyme_filter <- rownames_to_column(cazyme_filter,var = 'X.SampleID')
cazyme_filter <- merge(cazyme_filter,map[c('X.SampleID','UserName','StudyDayNo')],by = 'X.SampleID')
co_vars <- aggregate(cazyme_filter[,!names(cazyme_filter)%in%c('X.SampleID','UserName','StudyDayNo')],by=list(cazyme_filter$UserName),FUN=function(x){sd(x)/mean(x)})
hist(co_vars_cazyme)
#cazyme_filter <- as.data.frame((cazyme_clr))
co_vars[is.na(co_vars)] <- 0
co_vars_cazyme <- colMeans(co_vars[-1])
co_vars_cazyme <- co_vars_cazyme[order(co_vars_cazyme,decreasing = T)]
cazyme_to_keep <- names(co_vars_cazyme)[1:150]
cazyme_filter <- select(cazyme_filter,c('X.SampleID','UserName','StudyDayNo',cazyme_to_keep))
hist(co_vars_cazyme[cazyme_to_keep])
cazyme_filter <- select(cazyme_filter,cazyme_to_keep)
cazyme_filter <- as.data.frame(t(cazyme))
cazyme_filter <- rownames_to_column(cazyme_filter,var = 'X.SampleID')
cazyme_filter <- merge(cazyme_filter,map[c('X.SampleID','UserName','StudyDayNo')],by = 'X.SampleID')
rownames(cazyme_filter) <- cazyme_filter$UserName;cazyme_filter <- select(cazyme_filter,cazyme_to_keep);
#cazyme_filter <- as.data.frame((cazyme_clr))
co_vars[is.na(co_vars)] <- 0
co_vars_cazyme <- colMeans(co_vars[-1])
co_vars_cazyme <- co_vars_cazyme[order(co_vars_cazyme,decreasing = T)]
cazyme_to_keep <- names(co_vars_cazyme)[1:150]
View(cazyme_filter)
rownames(cazyme_filter) <- cazyme_filter$X.SampleID;cazyme_filter <- select(cazyme_filter,cazyme_to_keep);
hist(co_vars_cazyme[cazyme_to_keep])
cazyme_filter <- sweep(cazyme_filter,2,colSums(cazyme_filter),'/')
View(cazyme_filter)
myimpR = impRZilr(cazyme_filter, maxit = 3, method = "lm", dl = rep(0.00000000001,ncol(cazyme_filter)), verbose = T) # pick a good detection limit...
myimpR = impRZilr(cazyme_filter, maxit = 3, method = "lm", dl = rep(0.000000000000000000000001,ncol(cazyme_filter)), verbose = T) # pick a good detection limit...
myimpR = impRZilr(cazyme_filter, maxit = 3, method = "lm", dl = rep(0.1,ncol(cazyme_filter)), verbose = T) # pick a good detection limit...
cazyme_filter <- as.data.frame(t(cazyme))
cazyme_filter <- rownames_to_column(cazyme_filter,var = 'X.SampleID')
cazyme_filter <- merge(cazyme_filter,map[c('X.SampleID','UserName','StudyDayNo')],by = 'X.SampleID')
co_vars <- aggregate(cazyme_filter[,!names(cazyme_filter)%in%c('X.SampleID','UserName','StudyDayNo')],by=list(cazyme_filter$UserName),FUN=function(x){sd(x)/mean(x)})
hist(co_vars_cazyme)
#cazyme_filter <- as.data.frame((cazyme_clr))
co_vars[is.na(co_vars)] <- 0
co_vars_cazyme <- colMeans(co_vars[-1])
co_vars_cazyme <- co_vars_cazyme[order(co_vars_cazyme,decreasing = T)]
cazyme_to_keep <- names(co_vars_cazyme)[1:150]
rownames(cazyme_filter) <- cazyme_filter$X.SampleID;cazyme_filter <- select(cazyme_filter,cazyme_to_keep);
hist(co_vars_cazyme[cazyme_to_keep])
#cazyme_filter <- sweep(cazyme_filter,2,colSums(cazyme_filter),'/')
myimpR = impRZilr(cazyme_filter, maxit = 3, method = "lm", dl = rep(2,ncol(cazyme_filter)), verbose = T) # pick a good detection limit...
#cazyme_filter <- sweep(cazyme_filter,2,colSums(cazyme_filter),'/')
myimpR = impRZilr(cazyme_filter*1.0, maxit = 3, method = "lm", dl = rep(2,ncol(cazyme_filter*1.0)), verbose = T) # pick a good detection limit...
#cazyme_filter <- sweep(cazyme_filter,2,colSums(cazyme_filter),'/')
myimpR = impRZilr(cazyme_filter*1.0, maxit = 3, method = "lm", dl = rep(1,ncol(cazyme_filter*1.0)), verbose = T) # pick a good detection limit...
cazyme_sum <- aggregate(cazyme_filter[,!names(cazyme_filter)%in%c('X.SampleID','UserName','StudyDayNo')],by=list(cazyme_filter$UserName),FUN=sum)
cazyme_filter <- as.data.frame(t(cazyme))
cazyme_filter <- rownames_to_column(cazyme_filter,var = 'X.SampleID')
cazyme_filter <- merge(cazyme_filter,map[c('X.SampleID','UserName','StudyDayNo')],by = 'X.SampleID')
cazyme_sum <- aggregate(cazyme_filter[,!names(cazyme_filter)%in%c('X.SampleID','UserName','StudyDayNo')],by=list(cazyme_filter$UserName),FUN=sum)
View(cazyme_sum)
rowMeans(cazyme_sum[-1])
colMeans(cazyme_sum[-1])
cazyme_sum[cazyme_sum>0] <- 1
colSums(cazyme_sum)
colSums(cazyme_sum[-1])
colSums(cazyme_sum[-1]) > 34*0.25
names(cazyme_sum[-1])[colSums(cazyme_sum[-1]) > 34*0.25]
cazyme_sum_to_keep <- names(cazyme_sum[-1])[colSums(cazyme_sum[-1]) > 34*0.25]
hist(co_vars_cazyme)
#cazyme_filter <- as.data.frame((cazyme_clr))
co_vars[is.na(co_vars)] <- 0
co_vars_cazyme <- colMeans(co_vars[-1])
co_vars_cazyme <- co_vars_cazyme[order(co_vars_cazyme,decreasing = T)]
cazyme_to_keep <- names(co_vars_cazyme)[1:150]
rownames(cazyme_filter) <- cazyme_filter$X.SampleID
cazyme_cor_to_keep <- names(co_vars_cazyme)[1:150]
rownames(cazyme_filter) <- cazyme_filter$X.SampleID
cazyme_to_keep <- intersect(cazyme_cor_to_keep,cazyme_sum_to_keep)
hist(co_vars_cazyme[cazyme_to_keep])
cazyme_sum_to_keep <- names(cazyme_sum[-1])[colSums(cazyme_sum[-1]) > 34*0.3]
#cazyme_filter <- as.data.frame((cazyme_clr))
co_vars[is.na(co_vars)] <- 0
co_vars_cazyme <- colMeans(co_vars[-1])
co_vars_cazyme <- co_vars_cazyme[order(co_vars_cazyme,decreasing = T)]
cazyme_cor_to_keep <- names(co_vars_cazyme)[1:150]
rownames(cazyme_filter) <- cazyme_filter$X.SampleID
cazyme_to_keep <- intersect(cazyme_cor_to_keep,cazyme_sum_to_keep)
cazyme_filter <- select(cazyme_filter,cazyme_to_keep)
hist(co_vars_cazyme[cazyme_to_keep])
#cazyme_filter <- sweep(cazyme_filter,2,colSums(cazyme_filter),'/')
myimpR = impRZilr(cazyme_filter*1.0, maxit = 3, method = "lm", dl = rep(1,ncol(cazyme_filter*1.0)), verbose = T) # pick a good detection limit...
cazyme_sum_to_keep <- names(cazyme_sum[-1])[colSums(cazyme_sum[-1]) > 34*0.5]
cazyme_cor_to_keep <- names(co_vars_cazyme)[1:100]
rownames(cazyme_filter) <- cazyme_filter$X.SampleID
cazyme_to_keep <- intersect(cazyme_cor_to_keep,cazyme_sum_to_keep)
cazyme_filter <- select(cazyme_filter,cazyme_to_keep)
hist(co_vars_cazyme[cazyme_to_keep])
cazyme_sum <- aggregate(cazyme_filter[,!names(cazyme_filter)%in%c('X.SampleID','UserName','StudyDayNo')],by=list(cazyme_filter$UserName),FUN=sum)
cazyme_sum[cazyme_sum>0] <- 1
[colSums(cazyme_sum[-1]) > 34*0.5
[colSums(cazyme_sum[-1]) > 34*0.5]
colSums(cazyme_sum[-1]) > 34*0.5
cazyme_sum_to_keep <- names(cazyme_sum[-1])[colSums(cazyme_sum[-1]) > 34*0.5]
View(cazyme_filter)
cazyme_filter <- as.data.frame(t(cazyme))
cazyme_filter <- rownames_to_column(cazyme_filter,var = 'X.SampleID')
cazyme_filter <- merge(cazyme_filter,map[c('X.SampleID','UserName','StudyDayNo')],by = 'X.SampleID')
co_vars <- aggregate(cazyme_filter[,!names(cazyme_filter)%in%c('X.SampleID','UserName','StudyDayNo')],by=list(cazyme_filter$UserName),FUN=function(x){sd(x)/mean(x)})
cazyme_sum <- aggregate(cazyme_filter[,!names(cazyme_filter)%in%c('X.SampleID','UserName','StudyDayNo')],by=list(cazyme_filter$UserName),FUN=sum)
cazyme_sum[cazyme_sum>0] <- 1
cazyme_sum_to_keep <- names(cazyme_sum[-1])[colSums(cazyme_sum[-1]) > 34*0.5]
hist(co_vars_cazyme)
#cazyme_filter <- as.data.frame((cazyme_clr))
co_vars[is.na(co_vars)] <- 0
co_vars_cazyme <- colMeans(co_vars[-1])
co_vars_cazyme <- co_vars_cazyme[order(co_vars_cazyme,decreasing = T)]
cazyme_cor_to_keep <- names(co_vars_cazyme)[1:100]
rownames(cazyme_filter) <- cazyme_filter$X.SampleID
cazyme_to_keep <- intersect(cazyme_cor_to_keep,cazyme_sum_to_keep)
cazyme_filter <- select(cazyme_filter,c('X.SampleID',cazyme_to_keep))
View(cazyme_filter)
cazyme_filter <- select(cazyme_filter,cazyme_to_keep)
cazyme_sum <- aggregate(cazyme_filter[,!names(cazyme_filter)%in%c('X.SampleID','UserName','StudyDayNo')],by=list(cazyme_filter$UserName),FUN=sum)
View(cazyme_filter)
setwd("G:/Dan_Lab/dietstudy_analyses-master/")
map_sample <- read.table("data/maps/SampleID_map.txt", sep = "\t", header = T, comment = "")
map_username <- read.table("data/maps/UserName_map.txt", sep = "\t", header = T, comment = "")
map_sample$StudyDate <- as.Date.factor(map_sample$StudyDate, format = "%m/%d/%y")
# identify soylent samples
soylent <- map_sample[map_sample$UserName %in% c("MCTs11", "MCTs12"),]
soylent <- as.character(soylent$X.SampleID)
##########food##############
# load the food distance matrix, unweighted unifrac
food_un <- read.delim("data/diet/processed_food/dhydrt_smry_no_soy_beta/unweighted_unifrac_dhydrt.smry.no.soy.txt", row = 1) # weighted in not significant
food_dist <- as.dist(food_un)
# make non-tree distance matrix for food (for supplemental)
food <- read.delim("data/diet/processed_food/dhydrt.smry.no.soy.txt", row = 1)
food <- food[,colnames(food) %in% colnames(food_un)]
no_tree_dist <- dist(t(food))
setwd('G:/Dan_Lab/codes/CAZyme/CAZYme_Analysis/Data_Analysis/')
cazyme <- t(cazyme_filter)
View(cazyme)
cazyme <- cazyme[,colnames(cazyme)%in%colnames(food_un)]
colnames(food_un)
setwd('G:/Dan_Lab/codes/CAZyme/CAZYme_Analysis/Data_Analysis/')
cazyme <- read.table('./data/Cazyme_total.txt',sep='\t',header = T,row.names = 1)
map <- read.table("./maps/SampleID_map.txt", sep = "\t", header = T, comment = "")
cazyme_filter <- as.data.frame(t(cazyme))
cazyme_filter <- rownames_to_column(cazyme_filter,var = 'X.SampleID')
cazyme_filter <- merge(cazyme_filter,map[c('X.SampleID','UserName','StudyDayNo')],by = 'X.SampleID')
co_vars <- aggregate(cazyme_filter[,!names(cazyme_filter)%in%c('X.SampleID','UserName','StudyDayNo')],by=list(cazyme_filter$UserName),FUN=function(x){sd(x)/mean(x)})
cazyme_sum <- aggregate(cazyme_filter[,!names(cazyme_filter)%in%c('X.SampleID','UserName','StudyDayNo')],by=list(cazyme_filter$UserName),FUN=sum)
cazyme_sum[cazyme_sum>0] <- 1
cazyme_sum_to_keep <- names(cazyme_sum[-1])[colSums(cazyme_sum[-1]) > 34*0.5]
hist(co_vars_cazyme)
#cazyme_filter <- as.data.frame((cazyme_clr))
co_vars[is.na(co_vars)] <- 0
co_vars_cazyme <- colMeans(co_vars[-1])
co_vars_cazyme <- co_vars_cazyme[order(co_vars_cazyme,decreasing = T)]
cazyme_cor_to_keep <- names(co_vars_cazyme)[1:100]
rownames(cazyme_filter) <- cazyme_filter$X.SampleID
cazyme_to_keep <- intersect(cazyme_cor_to_keep,cazyme_sum_to_keep)
cazyme_filter <- select(cazyme_filter,cazyme_to_keep)
hist(co_vars_cazyme[cazyme_to_keep])
View(cazyme_filter)
hist(co_vars_cazyme[cazyme_to_keep])
View(cazyme)
cazyme_mean <- aggregate(t(cazyme)[cazyme_to_keep],by=list(cazyme_filter$UserName),FUN=mean)
View(cazyme_filter)
View(cazyme_filter)
View(cazyme)
View(cazyme_filter)
View(temp)
cazyme_filter <- as.data.frame(t(cazyme))
cazyme_filter <- rownames_to_column(cazyme_filter,var = 'X.SampleID')
cazyme_filter <- merge(cazyme_filter,map[c('X.SampleID','UserName','StudyDayNo')],by = 'X.SampleID')
co_vars <- aggregate(cazyme_filter[,!names(cazyme_filter)%in%c('X.SampleID','UserName','StudyDayNo')],by=list(cazyme_filter$UserName),FUN=function(x){sd(x)/mean(x)})
cazyme_sum <- aggregate(cazyme_filter[,!names(cazyme_filter)%in%c('X.SampleID','UserName','StudyDayNo')],by=list(cazyme_filter$UserName),FUN=sum)
cazyme_sum[cazyme_sum>0] <- 1
cazyme_sum_to_keep <- names(cazyme_sum[-1])[colSums(cazyme_sum[-1]) > 34*0.5]
hist(co_vars_cazyme)
#cazyme_filter <- as.data.frame((cazyme_clr))
co_vars[is.na(co_vars)] <- 0
co_vars_cazyme <- colMeans(co_vars[-1])
co_vars_cazyme <- co_vars_cazyme[order(co_vars_cazyme,decreasing = T)]
cazyme_cor_to_keep <- names(co_vars_cazyme)[1:100]
rownames(cazyme_filter) <- cazyme_filter$X.SampleID
cazyme_to_keep <- intersect(cazyme_cor_to_keep,cazyme_sum_to_keep)
cazyme_cleaned <- select(cazyme_filter,cazyme_to_keep)
hist(co_vars_cazyme[cazyme_to_keep])
cazyme_mean <- aggregate(cazyme_cleaned,by=list(cazyme_filter$UserName),FUN=mean)
View(cazyme_mean)
rownames(cazyme_mean) <- cazyme_mean$Group.1;cazyme_mean <- cazyme_mean[-1]
View(food_un)
View(cazyme_mean)
cazyme <- t(cazyme_mean)
View(cazyme)
cazyme <- cazyme[,colnames(cazyme)%in%colnames(food_un)]
cazyme_dist <- dist(t(cazyme))
cazyme_all <- cazyme_cleaned
View(cazyme_cleaned)
cazyme_all <- t(cazyme_cleaned)
cazyme_all <- cazyme_all[,!colnames(cazyme_all)%in%soylent]
cazyme_all_dist <- dist(t(cazyme_all))
# make pcoa
cazyme_all_pcoa <- data.frame(pcoa(cazyme_all_dist)$vectors)
eigen <- pcoa(cazyme_all_dist)$values$Eigenvalues
percent_var <- signif(eigen/sum(eigen), 4)*100
# move rownames to a column
cazyme_all_pcoa <- rownames_to_column(cazyme_all_pcoa, var = "X.SampleID")
#merge map and PCOA by SampleID - select both lines and run together - won't work otherwise
cazyme_all_pcoa <- inner_join(cazyme_all_pcoa, map_sample, by = 'X.SampleID')
mytest <- adonis(cazyme_all_dist~cazyme_all_pcoa$UserName, permutations = 999)
plot_p <- mytest$aov.tab$`Pr(>F)`[1]
mytest
cazyme_all_plot_one_color <- ggplot(cazyme_all_pcoa, aes(x = Axis.1, y = Axis.2, fill = UserName)) +
geom_point(color =  "#5d47ff", alpha=0.75, size = 2, alpha = 0.6) +
stat_ellipse(color = "dark grey", type = "norm", linetype = 2, level = 0.95, alpha = 0.5) +
xlab(paste0("PC 1 [",percent_var[1],"%]")) +
ylab(paste0("PC 2 [",percent_var[2],"%]")) +
theme_classic() +
theme(legend.position = "right",
legend.title = element_blank(),
legend.text = element_text(size = 9),
axis.text = element_text(size = 4),
axis.title = element_text(size=9)) +
guides(color = guide_legend(ncol = 4)) +
annotate("text", x = 40, y = -50, label = paste0("p-value = ",plot_p))
cazyme_all_plot_one_color + theme(legend.position = 'none')
# make pcoas
pcoa_f <- as.data.frame(pcoa(food_dist)$vectors)
pcoa_c <- as.data.frame(pcoa(cazyme_dist)$vectors)
# procrustes
pro <- procrustes(pcoa_f, pcoa_c)
pro_test <- protest(pcoa_f, pcoa_c, perm = 999)
mantel_test <- mantel(food_dist,cazyme_dist,method = 'spearman')
eigen <- sqrt(pro$svd$d)
percent_var <- signif(eigen/sum(eigen), 4)*100
beta_pro <- data.frame(pro$X)
trans_pro <- data.frame(pro$Yrot)
beta_pro$UserName <- rownames(beta_pro)
beta_pro$type <- "Food (Unweighted Unifrac)"
trans_pro$UserName <- rownames(trans_pro)
trans_pro$type <- "Cazyme (Aitchison's)"
colnames(trans_pro) <- colnames(beta_pro)
pval <- signif(pro_test$signif, 1)
plot <- rbind(beta_pro, trans_pro)
food_cazyme <- ggplot(plot) +
geom_point(size = 3, alpha=0.75, aes(x = Axis.1, y = Axis.2, color = type)) +
scale_color_manual(values = c("#ff0f17", "#ffb405")) +
theme_classic() +
geom_line(aes(x= Axis.1, y=Axis.2, group=UserName), col = "darkgrey", alpha = 0.6) +
theme(panel.background = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
legend.title = element_blank(),
legend.text = element_text(size=9),
legend.position = 'bottom',
axis.text = element_text(size=4),
axis.title = element_text(size=9),
aspect.ratio = 1) +
guides(color = guide_legend(ncol = 1)) +
annotate("text", x = 0.3, y = -0.27, label = paste0("p-value=",pval), size = 2) +
xlab(paste0("PC 1 [",percent_var[1],"%]")) +
ylab(paste0("PC 2 [",percent_var[2],"%]"))
food_cazyme_leg <- get_legend(food_cazyme)
food_cazyme + theme(legend.position = "none")
View(cazyme_filter)
View(cazyme_cleaned)
View(cazyme_mean)
cazyme_mean <- aggregate(cazyme_cleaned,by=list(cazyme_filter$UserName),FUN=mean)
rownames(cazyme_mean) <- cazyme_mean$Group.1;cazyme_mean <- cazyme_mean[-1]
myimpR = impRZilr(cazyme_mean, maxit = 3, method = "lm", dl = rep(0.000001,ncol(cazyme_mean)), verbose = T) # pick a good detection limit...
View(cazyme_cleaned)
cazyme_mean_clr <- cenLR(myimpR$x)$x.clr
rownames(cazyme_mean_clr) <- unique(cazyme_filter$UserName)
cazyme_mean_clr_trans <- as.data.frame(t(cazyme_mean_clr))
View(cazyme_mean_clr_trans)
load('./data/cazyme_mean_clr.RData')
View(cazyme_mean_clr_trans)
cazyme_mean_clr <- cenLR(myimpR$x)$x.clr
rownames(cazyme_mean_clr) <- unique(cazyme_filter$UserName)
cazyme_mean_clr_trans <- as.data.frame(t(cazyme_mean_clr))
cazyme <- cazyme_mean_clr_trans
cazyme_dist <- dist(t(cazyme))
# make pcoas
pcoa_f <- as.data.frame(pcoa(food_dist)$vectors)
pcoa_c <- as.data.frame(pcoa(cazyme_dist)$vectors)
# procrustes
pro <- procrustes(pcoa_f, pcoa_c)
pro_test <- protest(pcoa_f, pcoa_c, perm = 999)
mantel_test <- mantel(food_dist,cazyme_dist,method = 'spearman')
eigen <- sqrt(pro$svd$d)
cazyme <- cazyme[,colnames(cazyme)%in%colnames(food_un)]
cazyme_dist <- dist(t(cazyme))
# make pcoas
pcoa_f <- as.data.frame(pcoa(food_dist)$vectors)
pcoa_c <- as.data.frame(pcoa(cazyme_dist)$vectors)
# procrustes
pro <- procrustes(pcoa_f, pcoa_c)
pro_test <- protest(pcoa_f, pcoa_c, perm = 999)
mantel_test <- mantel(food_dist,cazyme_dist,method = 'spearman')
eigen <- sqrt(pro$svd$d)
percent_var <- signif(eigen/sum(eigen), 4)*100
beta_pro <- data.frame(pro$X)
trans_pro <- data.frame(pro$Yrot)
beta_pro$UserName <- rownames(beta_pro)
beta_pro$type <- "Food (Unweighted Unifrac)"
trans_pro$UserName <- rownames(trans_pro)
trans_pro$type <- "Cazyme (Aitchison's)"
colnames(trans_pro) <- colnames(beta_pro)
pval <- signif(pro_test$signif, 1)
plot <- rbind(beta_pro, trans_pro)
food_cazyme <- ggplot(plot) +
geom_point(size = 3, alpha=0.75, aes(x = Axis.1, y = Axis.2, color = type)) +
scale_color_manual(values = c("#ff0f17", "#ffb405")) +
theme_classic() +
geom_line(aes(x= Axis.1, y=Axis.2, group=UserName), col = "darkgrey", alpha = 0.6) +
theme(panel.background = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
legend.title = element_blank(),
legend.text = element_text(size=9),
legend.position = 'bottom',
axis.text = element_text(size=4),
axis.title = element_text(size=9),
aspect.ratio = 1) +
guides(color = guide_legend(ncol = 1)) +
annotate("text", x = 0.3, y = -0.27, label = paste0("p-value=",pval), size = 2) +
xlab(paste0("PC 1 [",percent_var[1],"%]")) +
ylab(paste0("PC 2 [",percent_var[2],"%]"))
food_cazyme_leg <- get_legend(food_cazyme)
food_cazyme + theme(legend.position = "none")
