cazyme_filter <- as.data.frame(t(cazyme))
setwd('G:/Dan_Lab/codes/CAZyme/CAZYme_Analysis/Data_Analysis/')
cazyme <- read.table('./data/Cazyme_total2.txt',sep='\t',header = T,row.names = 1)
map <- read.table("./maps/SampleID_map.txt", sep = "\t", header = T, comment = "")
cazyme_filter <- as.data.frame(t(cazyme))
View(cazyme_filter)
cazyme <- read.table('./data/Cazyme_total2.txt',sep='\t',header = T,row.names = 1)
map <- read.table("./maps/SampleID_map.txt", sep = "\t", header = T, comment = "")
View(cazyme)
cazyme <- sweep(cazyme,2,colSums(cazyme),'/')
colSums(cazyme)
homedir <- "G:/Dan_Lab/dietstudy_analyses-master/"
# load map
map <- read.table("data/maps/SampleID_map.txt", sep = "\t", header = T, comment = "")
# Load KEGG module file from APRIL 2018
func<- read.delim("data/function/KEGG/kegg_module_table.txt", row = 1, stringsAsFactors = F)
homedir <- "G:/Dan_Lab/dietstudy_analyses-master/"
setwd(dir = homedir)
# load map
map <- read.table("data/maps/SampleID_map.txt", sep = "\t", header = T, comment = "")
# Load KEGG module file from APRIL 2018
func<- read.delim("data/function/KEGG/kegg_module_table.txt", row = 1, stringsAsFactors = F)
View(func)
View(cazyme)
View(cazyme_filter)
View(cazyme)
cazyme_filter <- as.data.frame(t(cazyme))
View(cazyme_filter)
View(cazyme_filter)
cazyme_cleaned <- cazyme_filter
View(cazyme_cleaned)
cazyme_cleaned <- t(cazyme_filter)
cazyme_mean <- aggregate(cazyme_cleaned,by=list(cazyme_filter$UserName),FUN=mean)
cazyme_cleaned <- t(cazyme_filter)
cazyme_cleaned <- as.data.frame(t(cazyme_filter))
View(cazyme_cleaned)
cazyme_filter <- as.data.frame(t(cazyme))
cazyme_filter <- rownames_to_column(cazyme_filter,var = 'X.SampleID')
cazyme_filter <- merge(cazyme_filter,map[c('X.SampleID','UserName','StudyDayNo')],by = 'X.SampleID')
rownames(cazyme_filter) <- cazyme_filter$X.SampleID
cazyme_cleaned <- select(cazyme_filter)
cazyme_mean <- aggregate(cazyme_cleaned,by=list(cazyme_filter$UserName),FUN=mean)
View(cazyme_cleaned)
cazyme_cleaned <- select(cazyme_filter,rownames(cazyme_filter))
cazyme <- read.table('./data/Cazyme_total2.txt',sep='\t',header = T,row.names = 1)
setwd('G:/Dan_Lab/codes/CAZyme/CAZYme_Analysis/Data_Analysis/')
cazyme <- read.table('./data/Cazyme_total2.txt',sep='\t',header = T,row.names = 1)
View(cazyme)
cazyme <- sweep(cazyme,2,colSums(cazyme),'/')
cazyme_filter <- as.data.frame(t(cazyme))
View(cazyme_filter)
cazyme_filter <- rownames_to_column(cazyme_filter,var = 'X.SampleID')
cazyme_filter <- merge(cazyme_filter,map[c('X.SampleID','UserName','StudyDayNo')],by = 'X.SampleID')
View(cazyme_filter)
View(cazyme)
cazyme <- read.table('./data/Cazyme_total2.txt',sep='\t',header = T,row.names = 1)
map <- read.table("./maps/SampleID_map.txt", sep = "\t", header = T, comment = "")
cazyme <- as.data.frame(t(sweep(cazyme,2,colSums(cazyme),'/')))
View(cazyme)
cazyme_filter <- as.data.frame(cazyme)
cazyme_filter <- rownames_to_column(cazyme_filter,var = 'X.SampleID')
cazyme_filter <- merge(cazyme_filter,map[c('X.SampleID','UserName','StudyDayNo')],by = 'X.SampleID')
cazyme_mean <- aggregate(cazyme,by=list(cazyme_filter$UserName),FUN=mean)
View(cazyme_mean)
rownames(cazyme_mean) <- ""
cazyme_mean <- column_to_rownames(cazyme_mean,cazyme_mean$Group.1)
View(cazyme)
rowSums(cazyme_mean)
rowSums(cazyme_mean[-1])
rownames(cazyme_mean) <- cazyme_mean$Group.1;cazyme_mean <- cazyme_mean[-1]
require(vegen)
require(vegan)
co_vars <- sapply(cazyme_mean,FUN = function(x){sd(x)/mean(x)})
View(cazyme_mean)
co_vars <- co_vars[order(co_vars,decreasing = F)]
hist(co_vars)
co_vars <- co_vars[order(co_vars,decreasing = T)]
View(cazyme_mean)
cazyme_mean <- scale(cazyme_mean)
View(cazyme_mean)
cazyme_mean_clr <- cenLR(cazyme_mean)
View(cazyme_mean_clr)
cazyme_mean_clr <- cenLR(cazyme_mean)$x
View(cazyme_mean_clr)
cazyme_mean_for_fil <- cazyme_mean
cazyme_mean <- aggregate(cazyme,by=list(cazyme_filter$UserName),FUN=mean)
rownames(cazyme_mean) <- cazyme_mean$Group.1;cazyme_mean <- cazyme_mean[-1]
cazyme_mean_for_fil <- cazyme_mean
View(cazyme_filter)
View(cazyme_mean_for_fil)
cazyme_mean_for_fil[cazyme_mean_for_fil>0] <- 1
cazyme_mean <- cazyme_mean[colSums(cazyme_mean_for_fil)>34*0.5]
View(cazyme_mean)
cazyme_mean <- cazyme_mean[colSums(cazyme_mean_for_fil)>34*0.3]
cazyme_mean <- aggregate(cazyme,by=list(cazyme_filter$UserName),FUN=mean)
rownames(cazyme_mean) <- cazyme_mean$Group.1;cazyme_mean <- cazyme_mean[-1]
cazyme_mean <- cazyme_mean[colSums(cazyme_mean_for_fil)>34*0.3]
View(cazyme_mean)
cazyme_mean_clr <- cenLR(cazyme_mean)$x
View(cazyme_mean)
View(cazyme_mean_clr)
View(cazyme_mean)
myimpR = impRZilr(cazyme_mean, maxit = 3, method = "lm", dl = rep(0.00000000001,ncol(cazyme_mean)), verbose = T) # pick a good detection limit...
View(myimpR)
cazyme_mean_clr <- cenLR(myimpR$x)$x
View(cazyme_mean_clr)
setwd("G:/Dan_Lab/dietstudy_analyses-master/")
map_sample <- read.table("data/maps/SampleID_map.txt", sep = "\t", header = T, comment = "")
map_username <- read.table("data/maps/UserName_map.txt", sep = "\t", header = T, comment = "")
map_sample$StudyDate <- as.Date.factor(map_sample$StudyDate, format = "%m/%d/%y")
# identify soylent samples
soylent <- map_sample[map_sample$UserName %in% c("MCTs11", "MCTs12"),]
soylent <- as.character(soylent$X.SampleID)
##########food##############
# load the food distance matrix, unweighted unifrac
food_un <- read.delim("data/diet/processed_food/dhydrt_smry_no_soy_beta/unweighted_unifrac_dhydrt.smry.no.soy.txt", row = 1) # weighted in not significant
food_dist <- as.dist(food_un)
# make non-tree distance matrix for food (for supplemental)
food <- read.delim("data/diet/processed_food/dhydrt.smry.no.soy.txt", row = 1)
food <- food[,colnames(food) %in% colnames(food_un)]
no_tree_dist <- dist(t(food))
setwd('G:/Dan_Lab/codes/CAZyme/CAZYme_Analysis/Data_Analysis/')
cazyme <- cazyme_mean_clr
View(cazyme)
View(cazyme)
View(cazyme_filter)
View(cazyme_mean)
rownames(cazyme_mean_clr) <- rownames(cazyme_mean)
cazyme_pro <- cazyme_mean_clr
View(cazyme_pro)
cazyme_pro <- t(cazyme_mean_clr)
cazyme_pro <- as.data.frame(t(cazyme_mean_clr))
cazyme <- cazyme[,colnames(cazyme)%in%colnames(food_un)]
cazyme_pro <- as.data.frame(t(cazyme_mean_clr))
cazyme_pro <- cazyme[,colnames(cazyme_pro)%in%colnames(food_un)]
View(cazyme_pro)
cazyme_pro <- cazyme_pro[,colnames(cazyme_pro)%in%colnames(food_un)]
cazyme_dist <- dist(t(cazyme_pro))
# make pcoas
pcoa_f <- as.data.frame(pcoa(food_dist)$vectors)
pcoa_c <- as.data.frame(pcoa(cazyme_dist)$vectors)
# procrustes
pro <- procrustes(pcoa_f, pcoa_c)
pro_test <- protest(pcoa_f, pcoa_c, perm = 999)
mantel_test <- mantel(food_dist,cazyme_dist,method = 'spearman')
eigen <- sqrt(pro$svd$d)
percent_var <- signif(eigen/sum(eigen), 4)*100
beta_pro <- data.frame(pro$X)
trans_pro <- data.frame(pro$Yrot)
beta_pro$UserName <- rownames(beta_pro)
beta_pro$type <- "Food (Unweighted Unifrac)"
trans_pro$UserName <- rownames(trans_pro)
trans_pro$type <- "Cazyme (Aitchison's)"
colnames(trans_pro) <- colnames(beta_pro)
pval <- signif(pro_test$signif, 1)
plot <- rbind(beta_pro, trans_pro)
food_cazyme <- ggplot(plot) +
geom_point(size = 3, alpha=0.75, aes(x = Axis.1, y = Axis.2, color = type)) +
scale_color_manual(values = c("#ff0f17", "#ffb405")) +
theme_classic() +
geom_line(aes(x= Axis.1, y=Axis.2, group=UserName), col = "darkgrey", alpha = 0.6) +
theme(panel.background = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
legend.title = element_blank(),
legend.text = element_text(size=9),
legend.position = 'bottom',
axis.text = element_text(size=4),
axis.title = element_text(size=9),
aspect.ratio = 1) +
guides(color = guide_legend(ncol = 1)) +
annotate("text", x = 0.3, y = -0.27, label = paste0("p-value=",pval), size = 2) +
xlab(paste0("PC 1 [",percent_var[1],"%]")) +
ylab(paste0("PC 2 [",percent_var[2],"%]"))
food_cazyme_leg <- get_legend(food_cazyme)
food_cazyme + theme(legend.position = "none")
pval <- signif(pro_test$signif, 3)
pro_test$signif
ggsave('./result/pro_test.pdf')
###############nutrients############
# load nutrition data
nutr <- read.delim("data/diet/processed_nutr/nutr_65_smry_no_soy.txt", row = 1)
setwd("G:/Dan_Lab/dietstudy_analyses-master/")
###############nutrients############
# load nutrition data
nutr <- read.delim("data/diet/processed_nutr/nutr_65_smry_no_soy.txt", row = 1)
# normalize nutrition data across features (rows)
nutr_n <- sweep(nutr, 1, rowSums(nutr), "/")
# make nutrition distance matrix (euclidean)
nutr_dist <- dist(t(nutr_n))
setwd('G:/Dan_Lab/codes/CAZyme/CAZYme_Analysis/Data_Analysis/')
# make pcoas
pcoa_n <- as.data.frame(pcoa(nutr_dist)$vectors)
pcoa_c <- as.data.frame(pcoa(cazyme_dist)$vectors)
# procrustes
pro <- procrustes(pcoa_n, pcoa_c)
pro_test <- protest(pcoa_f, pcoa_c, perm = 999)
mantel_test <- mantel(food_dist,cazyme_dist,method = 'spearman')
pro_test <- protest(pcoa_n, pcoa_c, perm = 999)
mantel_test
mantel_test <- mantel(nutr_dist,cazyme_dist,method = 'spearman')
mantel_test
eigen <- sqrt(pro$svd$d)
percent_var <- signif(eigen/sum(eigen), 4)*100
beta_pro <- data.frame(pro$X)
trans_pro <- data.frame(pro$Yrot)
beta_pro$UserName <- rownames(beta_pro)
beta_pro$type <- "Nutrition (Euclidean)"
trans_pro$UserName <- rownames(trans_pro)
trans_pro$type <- "Cazyme (Aitchison's)"
colnames(trans_pro) <- colnames(beta_pro)
pval <- signif(pro_test$signif, 1)
plot <- rbind(beta_pro, trans_pro)
food_cazyme <- ggplot(plot) +
geom_point(size = 3, alpha=0.75, aes(x = Axis.1, y = Axis.2, color = type)) +
scale_color_manual(values = c("#ff0f17", "#ffb405")) +
theme_classic() +
geom_line(aes(x= Axis.1, y=Axis.2, group=UserName), col = "darkgrey", alpha = 0.6) +
theme(panel.background = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
legend.title = element_blank(),
legend.text = element_text(size=9),
legend.position = 'bottom',
axis.text = element_text(size=4),
axis.title = element_text(size=9),
aspect.ratio = 1) +
guides(color = guide_legend(ncol = 1)) +
annotate("text", x = 0.3, y = -0.27, label = paste0("p-value=",pval), size = 2) +
xlab(paste0("PC 1 [",percent_var[1],"%]")) +
ylab(paste0("PC 2 [",percent_var[2],"%]"))
nutr_cazyme <- ggplot(plot) +
geom_point(size = 3, alpha=0.75, aes(x = Axis.1, y = Axis.2, color = type)) +
scale_color_manual(values = c("#ff0f17", "#ffb405")) +
theme_classic() +
geom_line(aes(x= Axis.1, y=Axis.2, group=UserName), col = "darkgrey", alpha = 0.6) +
theme(panel.background = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
legend.title = element_blank(),
legend.text = element_text(size=9),
legend.position = 'bottom',
axis.text = element_text(size=4),
axis.title = element_text(size=9),
aspect.ratio = 1) +
guides(color = guide_legend(ncol = 1)) +
annotate("text", x = 0.3, y = -0.27, label = paste0("p-value=",pval), size = 2) +
xlab(paste0("PC 1 [",percent_var[1],"%]")) +
ylab(paste0("PC 2 [",percent_var[2],"%]"))
nutr_cazyme_leg <- get_legend(nutr_cazyme)
nutr_cazyme + theme(legend.position = "none")
nutr_cazyme <- ggplot(plot) +
geom_point(size = 3, alpha=0.75, aes(x = Axis.1, y = Axis.2, color = type)) +
scale_color_manual(values = c("#ff0f17", "#ffb405")) +
theme_classic() +
geom_line(aes(x= Axis.1, y=Axis.2, group=UserName), col = "darkgrey", alpha = 0.6) +
theme(panel.background = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
legend.title = element_blank(),
legend.text = element_text(size=9),
legend.position = 'bottom',
axis.text = element_text(size=4),
axis.title = element_text(size=9),
aspect.ratio = 1) +
guides(color = guide_legend(ncol = 1)) +
annotate("text", x = 0.2, y = -0.2, label = paste0("p-value=",pval), size = 2) +
xlab(paste0("PC 1 [",percent_var[1],"%]")) +
ylab(paste0("PC 2 [",percent_var[2],"%]"))
nutr_cazyme_leg <- get_legend(nutr_cazyme)
nutr_cazyme + theme(legend.position = "none")
nutr_cazyme <- ggplot(plot) +
geom_point(size = 3, alpha=0.75, aes(x = Axis.1, y = Axis.2, color = type)) +
scale_color_manual(values = c("#66421a", "#b800e6")) +
theme_classic() +
geom_line(aes(x= Axis.1, y=Axis.2, group=UserName), col = "darkgrey", alpha = 0.6) +
theme(panel.background = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
legend.title = element_blank(),
legend.text = element_text(size=9),
legend.position = 'bottom',
axis.text = element_text(size=4),
axis.title = element_text(size=9),
aspect.ratio = 1) +
guides(color = guide_legend(ncol = 1)) +
annotate("text", x = 0.2, y = -0.2, label = paste0("p-value=",pval), size = 2) +
xlab(paste0("PC 1 [",percent_var[1],"%]")) +
ylab(paste0("PC 2 [",percent_var[2],"%]"))
nutr_cazyme_leg <- get_legend(nutr_cazyme)
nutr_cazyme + theme(legend.position = "none")
nutr_cazyme <- ggplot(plot) +
geom_point(size = 3, alpha=0.75, aes(x = Axis.1, y = Axis.2, color = type)) +
scale_color_manual(values = c("#66611a", "#b800e6")) +
theme_classic() +
geom_line(aes(x= Axis.1, y=Axis.2, group=UserName), col = "darkgrey", alpha = 0.6) +
theme(panel.background = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
legend.title = element_blank(),
legend.text = element_text(size=9),
legend.position = 'bottom',
axis.text = element_text(size=4),
axis.title = element_text(size=9),
aspect.ratio = 1) +
guides(color = guide_legend(ncol = 1)) +
annotate("text", x = 0.2, y = -0.2, label = paste0("p-value=",pval), size = 2) +
xlab(paste0("PC 1 [",percent_var[1],"%]")) +
ylab(paste0("PC 2 [",percent_var[2],"%]"))
nutr_cazyme_leg <- get_legend(nutr_cazyme)
nutr_cazyme + theme(legend.position = "none")
nutr_cazyme <- ggplot(plot) +
geom_point(size = 3, alpha=0.75, aes(x = Axis.1, y = Axis.2, color = type)) +
scale_color_manual(values = c("#1a661a", "#b800e6")) +
theme_classic() +
geom_line(aes(x= Axis.1, y=Axis.2, group=UserName), col = "darkgrey", alpha = 0.6) +
theme(panel.background = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
legend.title = element_blank(),
legend.text = element_text(size=9),
legend.position = 'bottom',
axis.text = element_text(size=4),
axis.title = element_text(size=9),
aspect.ratio = 1) +
guides(color = guide_legend(ncol = 1)) +
annotate("text", x = 0.2, y = -0.2, label = paste0("p-value=",pval), size = 2) +
xlab(paste0("PC 1 [",percent_var[1],"%]")) +
ylab(paste0("PC 2 [",percent_var[2],"%]"))
nutr_cazyme_leg <- get_legend(nutr_cazyme)
nutr_cazyme + theme(legend.position = "none")
nutr_cazyme <- ggplot(plot) +
geom_point(size = 3, alpha=0.75, aes(x = Axis.1, y = Axis.2, color = type)) +
scale_color_manual(values = c("#1a661a", "#00becc")) +
theme_classic() +
geom_line(aes(x= Axis.1, y=Axis.2, group=UserName), col = "darkgrey", alpha = 0.6) +
theme(panel.background = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
legend.title = element_blank(),
legend.text = element_text(size=9),
legend.position = 'bottom',
axis.text = element_text(size=4),
axis.title = element_text(size=9),
aspect.ratio = 1) +
guides(color = guide_legend(ncol = 1)) +
annotate("text", x = 0.2, y = -0.2, label = paste0("p-value=",pval), size = 2) +
xlab(paste0("PC 1 [",percent_var[1],"%]")) +
ylab(paste0("PC 2 [",percent_var[2],"%]"))
nutr_cazyme_leg <- get_legend(nutr_cazyme)
nutr_cazyme + theme(legend.position = "none")
ggsave('./result/pro_test_nutr.pdf')
colnames(cazyme_mean)
cazymes_to_keep <- colnames(cazyme_mean)
save(cazymes_to_keep,'./data/cazymes_to_keep.RData')
save(cazymes_to_keep,file='./data/cazymes_to_keep.RData')
food <- read.table('./data/masterdecaydiet.txt')
View(food)
View(food)
food <- read.table('./data/masterdecaydiet.txt',header = T)
split <- strsplit(food$taxonomy,";")
require(robCompositions)
require(tibble)
setwd('G:/Dan_Lab/codes/CAZyme/CAZYme_Analysis/Data_Analysis/')
food <- read.table('./data/masterdecaydiet.txt',header = T)
split <- strsplit(food$taxonomy,";")
food$taxonomy
food$taxonomy <- as.character(food$taxonomy)
split <- strsplit(food$taxonomy,";")
foodStrings <- sapply(split,function(x) paste(x[1:2],collapse=";"))
View(split)
for (i in 1:7) taxaStrings = gsub("(;[A-z]__$)?(;NA$)?","",foodStrings,perl=T) # clean tips
tax_L2 <- rowsum(food,foodStrings)
food_L2 <- rowsum(food[-1],foodStrings)
View(food)
food_L2 <- rowsum(food[-ncol(food)],foodStrings)
rownames(food_L2) = sapply(strsplit(rownames(food),";"),function(x) paste(x[1:6],collapse=";"));
rownames(food_L2) = sapply(strsplit(food$taxonomy,";"),function(x) paste(x[1:2],collapse=";"));
View(food_L2)
split <- strsplit(food$taxonomy,";")
foodStrings <- sapply(split,function(x) paste(x[1:2],collapse=";"))
for (i in 1:7) taxaStrings = gsub("(;[A-z]__$)?(;NA$)?","",foodStrings,perl=T) # clean tips
food_L2 <- rowsum(food[-ncol(food)],foodStrings)
View(food_L2)
View(split)
cazyme <- read.table('./data/Cazyme_total2.txt',sep='\t',header = T,row.names = 1)
View(cazyme)
save(cazymes_to_keep,file='./data/cazymes_to_keep.RData')
load("G:/Dan_Lab/codes/CAZyme/CAZYme_Analysis/Data_Analysis/data/cazymes_to_keep.RData")
load("./data/cazymes_to_keep.RData")
cazyme <- read.table('./data/Cazyme_total2.txt',sep='\t',header = T,row.names = 1)
cazyme <- cazyme[cazymes_to_keep,]
View(cazyme)
cazyme <- cazyme[!grep('Other',rownames(cazyme)),]
load("./data/cazymes_to_keep.RData")
cazyme <- read.table('./data/Cazyme_total2.txt',sep='\t',header = T,row.names = 1)
cazyme <- cazyme[cazymes_to_keep,]
grep('Other',rownames(cazyme))
cazyme <- cazyme[-grep('Other',rownames(cazyme)),]
rownames(cazyme) <- gsub(".*;L4_",'',rownames(cazyme))
View(cazyme)
map <- read.table("./maps/SampleID_map.txt", sep = "\t", header = T, comment = "")
# identify soylent samples
soylent <- map[map$UserName %in% c("MCTs11", "MCTs12"),]
View(split)
View(soylent)
soylent <- as.character(soylent$X.SampleID)
cazyme <- t(cazyme)
food_L2 <- t(food_L2)
View(food_L2)
setwd('G:/Dan_Lab/codes/CAZyme/CAZYme_Analysis/Data_Analysis/')
food <- read.table('./data/masterdecaydiet.txt',header = T)
food$taxonomy <- as.character(food$taxonomy)
split <- strsplit(food$taxonomy,";")
foodStrings <- sapply(split,function(x) paste(x[1:2],collapse=";"))
for (i in 1:7) taxaStrings = gsub("(;[A-z]__$)?(;NA$)?","",foodStrings,perl=T) # clean tips
food_L2 <- rowsum(food[-ncol(food)],foodStrings)
View(food_L2)
rownames(food_L2) <- gsub(".*;L2_",'',rownames(food_L2))
load("./data/cazymes_to_keep.RData")
cazyme <- read.table('./data/Cazyme_total2.txt',sep='\t',header = T,row.names = 1)
cazyme <- cazyme[cazymes_to_keep,]
cazyme <- cazyme[-grep('Other',rownames(cazyme)),]
rownames(cazyme) <- gsub(".*;L4_",'',rownames(cazyme))
map <- read.table("./maps/SampleID_map.txt", sep = "\t", header = T, comment = "")
# identify soylent samples
soylent <- map[map$UserName %in% c("MCTs11", "MCTs12"),]
soylent <- as.character(soylent$X.SampleID)
View(cazyme)
cazyme <- cazyme[,!colnames(cazyme)%in%soylent]
food_L2 <- food_L2[,!colnames(food_L2)%in%soylent]
View(food_L2)
View(cazyme)
samples <- intersect(colnames(cazyme),colnames(food_L2))
cazyme <- cazyme[samples]
food_L2 <- food_L2[samples]
View(food_L2)
cazyme_c <- as.data.frame(t(cazyme))
View(cazyme_c)
View(map)
cazyme_c <- rownames_to_column(cazyme_c,var = 'X.SampleID')
View(cazyme_c)
View(cazyme_c)
cazyme_c <- merge(cazyme_c,map['X.SampleID','UserName'],by='X.Sampled')
cazyme_c <- merge(cazyme_c,map['X.SampleID','UserName'],by='X.SampleID')
map['X.SampleID','UserName']
cazyme_c <- merge(cazyme_c,map[c('X.SampleID','UserName')],by='X.SampleID')
food_c <- as.data.frame(t(food_L2))
food_c <- rownames_to_column(food_c,var='X.SampleID')
food_C <- merge(food_c,map[c('X.SampleID','UserName')],by='X.SampleID')
cazyme_food_c <- list()
food_c <- merge(food_c,map[c('X.SampleID','UserName')],by='X.SampleID')
food_list <- list()
cazyme_food_list <- list()
food_list <- list()
cazyme_list <- list()
for(i in unique(food_c$UserName)){
temp_food <- food_c[food_c$UserName==i,c('X.SampleID','UserName')]
temp_cazyme <- cazyme_c[cazyme_c$UserName==i,c('X.SampleID','UserName')]
}
View(temp_food)
for(i in unique(food_c$UserName)){
temp_food <- food_c[food_c$UserName==i,!colnames(food_c)%in%c('X.SampleID','UserName')]
temp_cazyme <- cazyme_c[cazyme_c$UserName==i,!colnames(cazyme_c)%in%c('X.SampleID','UserName')]
}
require(psych)
temp_cor <- cor.test(temp_food,temp_cazyme)
View(temp_food)
View(temp_cazyme)
temp_cor <- cor.test(t(temp_food),t(temp_cazyme))
temp_cor <- corr.test(temp_food,temp_cazyme)
View(temp_cor)
temp_cor[["r"]]
temp_cor_p <- corr.test(temp_food,temp_cazyme,adjust = 'fdr')$p
temp_cor_r <- corr.test(temp_food,temp_cazyme,adjust = 'fdr')$r
View(temp_cor_r)
View(temp_cor_p)
temp_cor_r <- corr.test(temp_food,temp_cazyme,adjust = 'fdr',method = 'Spearman')$r
temp_cor_p <- corr.test(temp_food,temp_cazyme,adjust = 'fdr',method = 'Spearman')$p
temp_cor_r <- corr.test(temp_food,temp_cazyme,adjust = 'fdr',method = 'spearman')$r
temp_cor_p <- corr.test(temp_food,temp_cazyme,adjust = 'fdr',method = 'spearman')$p
coef_v <- c()
pval_v <- c()
# load datlist (out put from running correlations)
load(file = "G:/Dan_Lab/dietstudy_analyses-master/data/food_v_microbes_per_person_decay.RData")
View(datlist)
food_v <- c()
cazyme_v <- c()
fdr_v <- c()
View(temp_cor_p)
View(temp_food)
for(a in 1:nrow(temp_cor_p)){
for (b in 1:ncol(temp_cor_p)){
if(!is.na(temp_cor_p[a,b])){
coef_v <- c(coef_v,temp_cor_r)
fdr_v <- c(fdr_v,temp_cor_p)
food_v <- c(food_v,colnames(temp_food)[a])
cazyme_v <- c(cazyme_v,colnames(temp_cazyme)[b])
}
}
}
for(a in 1:nrow(temp_cor_p)){
print(a)
for (b in 1:ncol(temp_cor_p)){
if(!is.na(temp_cor_p[a,b])){
coef_v <- c(coef_v,temp_cor_r)
fdr_v <- c(fdr_v,temp_cor_p)
food_v <- c(food_v,colnames(temp_food)[a])
cazyme_v <- c(cazyme_v,colnames(temp_cazyme)[b])
}
}
}
