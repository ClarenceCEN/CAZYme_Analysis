load(file = './data/cazyme_predict_list.RData')
setwd('G:/Dan_Lab/codes/CAZyme/CAZYme_Analysis/Data_Analysis/')
load(file = './data/cazyme_predict_list.RData')
View(cazyme_predict_dat)
#average for each subject
set.seed(666)
cazyme_rf_importance <- list()
for(i in names(cazyme_predict_dat)){
print(i)
today.cazymes <- paste0(cazyme_to_keep,'.x')
tomorrow.cazymes <- paste0(cazyme_to_keep,'.y')
rf.importance.list <- list()
for(j in seq_along(tomorrow.cazymes)){
today.cazyme <- today.cazymes[j]
tomorrow.cazyme <- tomorrow.cazymes[j]
cazyme.features <- c("cazyme.Axis.1","cazyme.Axis.2", "cazyme.Axis.3", "cazyme.Axis.4", "cazyme.Axis.5")
food.features <- colnames(food_L2)
predictor.feats <- cazyme_predict_dat[[i]][,c(cazyme.features,food.features)]
result.cazyme.tomorrow <- cazyme_predict_dat[[i]][tomorrow.cazyme]
rf.formula <- as.formula(paste0(tomorrow.cazyme,'~',paste(cazyme.features,collapse = '+'),'+',
paste(food.features,collapse = '+')))
a <- cazyme_predict_dat[[i]]
#model <- tuneRF(y=cazyme_predict_dat[[i]][tomorrow.cazyme],x=cazyme_predict_dat[[i]][c(cazyme.features,food.features)],ntreeTry = 501,doBest = T)
model <- randomForest(rf.formula,data = cazyme_predict_dat[[i]],importance=F,ntree=800)
rf.importance <- as.data.frame(model$importance)
#rf.importance <- as.data.frame(model$coefs)
colnames(rf.importance) <- paste0(gsub('.y','',tomorrow.cazyme))
rf.importance.list[[tomorrow.cazyme]] <- rf.importance
}
rf.importance.sub <- do.call('cbind',rf.importance.list)
rf.importance.sub[is.na(rf.importance.sub)] <- 0
rf.importance.sub <- as.data.frame(rowMeans(rf.importance.sub))
#colnames(rf.importance.sub) <- paste0(i,'.avg.importance')
colnames(rf.importance.sub) <- i
cazyme_rf_importance[[i]] <- rf.importance.sub
}
setwd("G:/Dan_Lab/dietstudy_analyses-master/")
load(file = "data/test_personal_diet_dat.Rdata")
setwd('G:/Dan_Lab/codes/CAZyme/CAZYme_Analysis/Data_Analysis/')
map <- read.table("./maps/SampleID_map.txt", sep = "\t", header = T, comment = "")
load(file = './data/cazy_list_clr_2.RData')
food <- read.table('./data/masterdecaydiet.txt',header = T)
food$taxonomy <- as.character(food$taxonomy)
split <- strsplit(food$taxonomy,";")
foodStrings <- sapply(split,function(x) paste(x[1:2],collapse=";"))
for (i in 1:7) taxaStrings = gsub("(;[A-z]__$)?(;NA$)?","",foodStrings,perl=T) # clean tips
food_L2 <- rowsum(food[-ncol(food)],foodStrings)
rownames(food_L2) <- gsub(".*;L2_",'',rownames(food_L2))
rownames(food_L2) <- paste0('food_',rownames(food_L2))
food_L2 <- as.data.frame(t(food_L2))
soylent <- map[map$UserName %in% c("MCTs11", "MCTs12"),]
soylentIDs <- droplevels(soylent$X.SampleID)
cazyme_to_keep <- colnames(cazyme_list_clr[['MCTs01']])
for(i in names(cazyme_list_clr)){
print(i)
cazyme_to_keep <- base::intersect(cazyme_to_keep,colnames(cazyme_list_clr[[i]]))
}
cazyme_to_keep <- setdiff(cazyme_to_keep,'X.SampleID')
all_cazyme <- lapply(cazyme_list_clr, function(x){
y <- melt(x,id.vars='X.SampleID',variable.name = 'cazyme',value.name='relative_abundance')
y
})
require(reshape2)
require(randomForest)
require(pheatmap)
require(dplyr)
require(ape)
require(e1071)
all_cazyme <- lapply(cazyme_list_clr, function(x){
y <- melt(x,id.vars='X.SampleID',variable.name = 'cazyme',value.name='relative_abundance')
y
})
all_cazyme <- do.call('rbind',all_cazyme)
all_cazyme <- dcast(all_cazyme,X.SampleID~cazyme,value.var = 'relative_abundance')
all_cazyme <- all_cazyme[,c(cazyme_to_keep,'X.SampleID')]
all_cazyme <- merge(all_cazyme,map[c('X.SampleID','UserName','StudyDayNo')],by='X.SampleID')
all_cazyme <- all_cazyme[!all_cazyme$X.SampleID%in%soylentIDs,]
cazyme_dist <- dist(select(all_cazyme,-UserName,-StudyDayNo,-X.SampleID))
cazymepc <- as.data.frame(pcoa(cazyme_dist)$vectors)
rownames(cazymepc) <- all_cazyme$X.SampleID
cazyme_predict_dat <- list()
#average for each subject
set.seed(666)
cazyme_rf_importance <- list()
for(i in names(cazyme_predict_dat)){
print(i)
today.cazymes <- paste0(cazyme_to_keep,'.x')
tomorrow.cazymes <- paste0(cazyme_to_keep,'.y')
rf.importance.list <- list()
for(j in seq_along(tomorrow.cazymes)){
today.cazyme <- today.cazymes[j]
tomorrow.cazyme <- tomorrow.cazymes[j]
cazyme.features <- c("cazyme.Axis.1","cazyme.Axis.2", "cazyme.Axis.3", "cazyme.Axis.4", "cazyme.Axis.5")
food.features <- colnames(food_L2)
predictor.feats <- cazyme_predict_dat[[i]][,c(cazyme.features,food.features)]
result.cazyme.tomorrow <- cazyme_predict_dat[[i]][tomorrow.cazyme]
rf.formula <- as.formula(paste0(tomorrow.cazyme,'~',paste(cazyme.features,collapse = '+'),'+',
paste(food.features,collapse = '+')))
a <- cazyme_predict_dat[[i]]
#model <- tuneRF(y=cazyme_predict_dat[[i]][tomorrow.cazyme],x=cazyme_predict_dat[[i]][c(cazyme.features,food.features)],ntreeTry = 501,doBest = T)
model <- randomForest(rf.formula,data = cazyme_predict_dat[[i]],importance=F,ntree=800)
rf.importance <- as.data.frame(model$importance)
#rf.importance <- as.data.frame(model$coefs)
colnames(rf.importance) <- paste0(gsub('.y','',tomorrow.cazyme))
rf.importance.list[[tomorrow.cazyme]] <- rf.importance
}
rf.importance.sub <- do.call('cbind',rf.importance.list)
rf.importance.sub[is.na(rf.importance.sub)] <- 0
rf.importance.sub <- as.data.frame(rowMeans(rf.importance.sub))
#colnames(rf.importance.sub) <- paste0(i,'.avg.importance')
colnames(rf.importance.sub) <- i
cazyme_rf_importance[[i]] <- rf.importance.sub
}
cazyme_rf_importance.all <- do.call('cbind',cazyme_rf_importance)
cazyme_rf_importance.all <- cazyme_rf_importance.all[apply(cazyme_rf_importance.all,1,sd)!=0,]
rownames(cazyme_rf_importance.all) <- gsub('food_','',rownames(cazyme_rf_importance.all))
#average for each subject
set.seed(666)
cazyme_rf_importance <- list()
for(i in names(cazyme_predict_dat)){
print(i)
today.cazymes <- paste0(cazyme_to_keep,'.x')
tomorrow.cazymes <- paste0(cazyme_to_keep,'.y')
rf.importance.list <- list()
for(j in seq_along(tomorrow.cazymes)){
today.cazyme <- today.cazymes[j]
tomorrow.cazyme <- tomorrow.cazymes[j]
cazyme.features <- c("cazyme.Axis.1","cazyme.Axis.2", "cazyme.Axis.3", "cazyme.Axis.4", "cazyme.Axis.5")
food.features <- colnames(food_L2)
predictor.feats <- cazyme_predict_dat[[i]][,c(cazyme.features,food.features)]
result.cazyme.tomorrow <- cazyme_predict_dat[[i]][tomorrow.cazyme]
rf.formula <- as.formula(paste0(tomorrow.cazyme,'~',paste(cazyme.features,collapse = '+'),'+',
paste(food.features,collapse = '+')))
a <- cazyme_predict_dat[[i]]
#model <- tuneRF(y=cazyme_predict_dat[[i]][tomorrow.cazyme],x=cazyme_predict_dat[[i]][c(cazyme.features,food.features)],ntreeTry = 501,doBest = T)
model <- randomForest(rf.formula,data = cazyme_predict_dat[[i]],importance=F,ntree=800)
rf.importance <- as.data.frame(model$importance)
#rf.importance <- as.data.frame(model$coefs)
colnames(rf.importance) <- paste0(gsub('.y','',tomorrow.cazyme))
rf.importance.list[[tomorrow.cazyme]] <- rf.importance
}
rf.importance.sub <- do.call('cbind',rf.importance.list)
rf.importance.sub[is.na(rf.importance.sub)] <- 0
rf.importance.sub <- as.data.frame(rowMeans(rf.importance.sub))
#colnames(rf.importance.sub) <- paste0(i,'.avg.importance')
colnames(rf.importance.sub) <- i
cazyme_rf_importance[[i]] <- rf.importance.sub
}
print(i)
today.cazymes <- paste0(cazyme_to_keep,'.x')
load(file = "data/test_personal_diet_dat.Rdata")
setwd("G:/Dan_Lab/dietstudy_analyses-master/")
load(file = "data/test_personal_diet_dat.Rdata")
load(file = './data/cazyme_predict_list.RData')
setwd('G:/Dan_Lab/codes/CAZyme/CAZYme_Analysis/Data_Analysis/')
load(file = './data/cazyme_predict_list.RData')
#average for each subject
set.seed(666)
cazyme_rf_importance <- list()
for(i in names(cazyme_predict_dat)){
print(i)
today.cazymes <- paste0(cazyme_to_keep,'.x')
tomorrow.cazymes <- paste0(cazyme_to_keep,'.y')
rf.importance.list <- list()
for(j in seq_along(tomorrow.cazymes)){
today.cazyme <- today.cazymes[j]
tomorrow.cazyme <- tomorrow.cazymes[j]
cazyme.features <- c("cazyme.Axis.1","cazyme.Axis.2", "cazyme.Axis.3", "cazyme.Axis.4", "cazyme.Axis.5")
food.features <- colnames(food_L2)
predictor.feats <- cazyme_predict_dat[[i]][,c(cazyme.features,food.features)]
result.cazyme.tomorrow <- cazyme_predict_dat[[i]][tomorrow.cazyme]
rf.formula <- as.formula(paste0(tomorrow.cazyme,'~',paste(cazyme.features,collapse = '+'),'+',
paste(food.features,collapse = '+')))
a <- cazyme_predict_dat[[i]]
#model <- tuneRF(y=cazyme_predict_dat[[i]][tomorrow.cazyme],x=cazyme_predict_dat[[i]][c(cazyme.features,food.features)],ntreeTry = 501,doBest = T)
model <- randomForest(rf.formula,data = cazyme_predict_dat[[i]],importance=F,ntree=800)
rf.importance <- as.data.frame(model$importance)
#rf.importance <- as.data.frame(model$coefs)
colnames(rf.importance) <- paste0(gsub('.y','',tomorrow.cazyme))
rf.importance.list[[tomorrow.cazyme]] <- rf.importance
}
rf.importance.sub <- do.call('cbind',rf.importance.list)
rf.importance.sub[is.na(rf.importance.sub)] <- 0
rf.importance.sub <- as.data.frame(rowMeans(rf.importance.sub))
#colnames(rf.importance.sub) <- paste0(i,'.avg.importance')
colnames(rf.importance.sub) <- i
cazyme_rf_importance[[i]] <- rf.importance.sub
}
View(cazyme_rf_importance)
cazyme_rf_importance[["MCTs04"]][["MCTs04"]]
for(j in seq_along(tomorrow.cazymes)){
today.cazyme <- today.cazymes[j]
tomorrow.cazyme <- tomorrow.cazymes[j]
cazyme.features <- c("cazyme.Axis.1","cazyme.Axis.2", "cazyme.Axis.3", "cazyme.Axis.4", "cazyme.Axis.5")
food.features <- colnames(food_L2)
predictor.feats <- cazyme_predict_dat[[i]][,c(cazyme.features,food.features)]
result.cazyme.tomorrow <- cazyme_predict_dat[[i]][tomorrow.cazyme]
rf.formula <- as.formula(paste0(tomorrow.cazyme,'~',paste(cazyme.features,collapse = '+'),'+',
paste(food.features,collapse = '+')))
a <- cazyme_predict_dat[[i]]
model <- randomForest(rf.formula,data = cazyme_predict_dat[[i]],importance=F,ntree=800)
rf.importance <- as.data.frame(model$importance)
colnames(rf.importance) <- paste0(gsub('.y','',tomorrow.cazyme))
rf.importance.list[[tomorrow.cazyme]] <- rf.importance
}
rf.importance.list <- list()
for(j in seq_along(tomorrow.cazymes)){
today.cazyme <- today.cazymes[j]
tomorrow.cazyme <- tomorrow.cazymes[j]
cazyme.features <- c("cazyme.Axis.1","cazyme.Axis.2", "cazyme.Axis.3", "cazyme.Axis.4", "cazyme.Axis.5")
food.features <- colnames(food_L2)
predictor.feats <- cazyme_predict_dat[[i]][,c(cazyme.features,food.features)]
result.cazyme.tomorrow <- cazyme_predict_dat[[i]][tomorrow.cazyme]
rf.formula <- as.formula(paste0(tomorrow.cazyme,'~',paste(cazyme.features,collapse = '+'),'+',
paste(food.features,collapse = '+')))
a <- cazyme_predict_dat[[i]]
model <- randomForest(rf.formula,data = cazyme_predict_dat[[i]],importance=F,ntree=800)
rf.importance <- as.data.frame(model$importance)
colnames(rf.importance) <- paste0(gsub('.y','',tomorrow.cazyme))
rf.importance.list[[tomorrow.cazyme]] <- rf.importance
}
View(rf.importance.list)
rf.importance.sub <- do.call('cbind',rf.importance.list)
rf.importance.sub[is.na(rf.importance.sub)] <- 0
View(rf.importance.sub)
cazyme_rf_importance_daily <- list()
#average for each subject
set.seed(666)
cazyme_rf_importance <- list()
cazyme_rf_importance_person <- list()
for(i in names(cazyme_predict_dat)){
print(i)
today.cazymes <- paste0(cazyme_to_keep,'.x')
tomorrow.cazymes <- paste0(cazyme_to_keep,'.y')
rf.importance.list <- list()
#rf.importance.person.list <- list()
for(j in seq_along(tomorrow.cazymes)){
today.cazyme <- today.cazymes[j]
tomorrow.cazyme <- tomorrow.cazymes[j]
cazyme.features <- c("cazyme.Axis.1","cazyme.Axis.2", "cazyme.Axis.3", "cazyme.Axis.4", "cazyme.Axis.5")
food.features <- colnames(food_L2)
predictor.feats <- cazyme_predict_dat[[i]][,c(cazyme.features,food.features)]
result.cazyme.tomorrow <- cazyme_predict_dat[[i]][tomorrow.cazyme]
rf.formula <- as.formula(paste0(tomorrow.cazyme,'~',paste(cazyme.features,collapse = '+'),'+',
paste(food.features,collapse = '+')))
a <- cazyme_predict_dat[[i]]
model <- randomForest(rf.formula,data = cazyme_predict_dat[[i]],importance=F,ntree=800)
rf.importance <- as.data.frame(model$importance)
colnames(rf.importance) <- paste0(gsub('.y','',tomorrow.cazyme))
rf.importance.list[[tomorrow.cazyme]] <- rf.importance
}
rf.importance.sub <- do.call('cbind',rf.importance.list)
rf.importance.sub[is.na(rf.importance.sub)] <- 0
cazyme_rf_importance_person[[i]] <- rf.importance.sub
rf.importance.sub <- as.data.frame(rowMeans(rf.importance.sub))
#colnames(rf.importance.sub) <- paste0(i,'.avg.importance')
colnames(rf.importance.sub) <- i
cazyme_rf_importance[[i]] <- rf.importance.sub
}
View(cazyme_rf_importance_person)
View(cazyme_rf_importance_person[["MCTs01"]])
pheatmap(cazyme_rf_importance.all,scale = 'column', color=colorRampPalette(c("green","black","red"))(100),
border_color = NA, annotation_row = anno_food, cluster_rows = T)
pheatmap(cazyme_rf_importance.all,scale = 'row', color=colorRampPalette(c("green","black","red"))(100),
border_color = NA, annotation_row = anno_food, cluster_rows = F)
cazyme_rf_importance.all <- do.call('cbind',cazyme_rf_importance)
cazyme_rf_importance.all <- cazyme_rf_importance.all[apply(cazyme_rf_importance.all,1,sd)!=0,]
rownames(cazyme_rf_importance.all) <- gsub('food_','',rownames(cazyme_rf_importance.all))
anno_food <- as.data.frame(rownames(cazyme_rf_importance.all))
rownames(anno_food) <- rownames(cazyme_rf_importance.all)
colnames(anno_food) <- 'category'
anno_food$category <- gsub('cazyme.Axis.*','cazyme',anno_food$category)
food_name <- food$taxonomy
for(j in seq_along(anno_food$category)){
if(sum(grepl(anno_food$category[j],food_name))>0){
#anno_food_name <- c(anno_food_name,sample(food_name[grepl(anno_food$category[j],food_name)],1))
anno_food$category[j] <- sample(food_name[grepl(anno_food$category[j],food_name)],1)
}
}
anno_food$category <- gsub(';L2.*','',anno_food$category)
anno_food$category <- gsub('L1_','',anno_food$category)
pheatmap(cazyme_rf_importance.all,scale = 'row', color=colorRampPalette(c("green","black","red"))(100),
border_color = NA, annotation_row = anno_food, cluster_rows = F)
pheatmap(cazyme_rf_importance.all,scale = 'column', color=colorRampPalette(c("green","black","red"))(100),
border_color = NA, annotation_row = anno_food, cluster_rows = T)
pheatmap(cazyme_rf_importance.all,scale = 'row', color=colorRampPalette(c("green","black","red"))(100),
border_color = NA, annotation_row = anno_food, cluster_rows = F)
View(cazyme_rf_importance_person[["MCTs01"]])
a <- cazyme_rf_importance_person[["MCTs01"]][["CE1"]]
pheatmap(a)
a
a
a <- cazyme_rf_importance_person[["MCTs01"]]
pheatmap(a)
pheatmap(a,scale = 'column')
pheatmap(a,scale = 'row')
load('./data/cazy_list_clr_2.RData')
View(cazyme_list_clr)
View(cazyme_list_clr[["MCTs01"]])
require(dplyr)
cazy_dist <- lapply(cazyme_list_clr, function(x){
x <- select(x,-X.SampleID)
d <- dist(x)
d
})
View(cazy_dist)
cazy_dist <- lapply(cazyme_list_clr, function(x){
x <- select(x,-X.SampleID)
d <- as.data.frame(dist(x))
d
})
cazy_dist <- lapply(cazyme_list_clr, function(x){
x <- select(x,-X.SampleID)
#d <- as.data.frame(dist(x))
d <- dist(x)
d
})
cazy_dist[["MCTs01"]]
cazy_dist <- lapply(cazyme_list_clr, function(x){
x <- select(x,-X.SampleID)
d <- dist(x)
d <- as.matrix(x)
d
})
View(cazy_dist)
cazy_dist[["MCTs01"]]
cazy_dist <- lapply(cazyme_list_clr, function(x){
x <- select(x,-X.SampleID)
d <- dist(x)
d <- as.matrix(d)
d
})
View(cazy_dist)
cazy_dist[["MCTs01"]]
cazy_dist <- lapply(cazyme_list_clr, function(x){
x <- select(x,-X.SampleID)
d <- dist(x)
d <- as.matrix(d)
d[upper.tri(d)] = 0
d
})
View(cazy_dist)
cazy_dist[["MCTs01"]]
cazy_dist <- lapply(cazyme_list_clr, function(x){
x <- select(x,-X.SampleID)
d <- dist(x)
d <- as.matrix(d)
d[upper.tri(d)] = -1
d
})
cazy_dist[["MCTs01"]]
cazy_dist <- lapply(cazyme_list_clr, function(x){
x <- select(x,-X.SampleID)
d <- dist(x)
d <- as.matrix(d)
d[upper.tri(d)] = 0
d <- as.vector(d)
d
})
View(cazy_dist)
cazy_dist[["MCTs01"]]
cazy_dist <- lapply(cazyme_list_clr, function(x){
x <- select(x,-X.SampleID)
d <- dist(x)
d <- as.matrix(d)
d[upper.tri(d)] = 0
d <- as.vector(d[d!=0])
d
})
View(cazy_dist)
cazy_dist[["MCTs01"]]
cazy_dist <- do.call('rbind',cazy_dist)
cazy_dist <- lapply(cazyme_list_clr, function(x){
x <- select(x,-X.SampleID)
d <- dist(x)
d <- as.matrix(d)
d[upper.tri(d)] = 0
d <- as.vector(d[d!=0])
d
})
View(cazy_dist)
cazy_dist <- do.call('cbind',cazy_dist)
cazy_dist <- lapply(cazyme_list_clr, function(x){
x <- select(x,-X.SampleID)
d <- dist(x)
d <- as.matrix(d)
d[upper.tri(d)] = 0
d <- as.vector(d[d!=0])
d
})
View(cazy_dist)
soylent.dist <- c(cazy_dist[['MCTs11']],cazy_dist[['MCTs12']])
soylent.dist
soylent.dist <- data.frame(Group='soylent',distance=soylent.dist)
View(soylent.dist)
regular.dist <- c()
regular.dist <- c()
for(i in names(cazy_dist)){
if(!i%in%c("MCTs11", "MCTs12")){
regular.dist <- c(regular.dist,cazy_dist[[i]])
}
}
regular.dist <- data.frame(Group='regular',distance=regular.dist)
View(regular.dist)
cazy_dist <- lapply(cazyme_list_clr, function(x){
x <- select(x,-X.SampleID)
d <- dist(x)
d <- as.matrix(d)
d[upper.tri(d)] = 0
d <- as.vector(d[d!=0])
d
})
soylent.dist <- c(cazy_dist[['MCTs11']],cazy_dist[['MCTs12']])
soylent.dist <- data.frame(Group='soylent',distance=1/soylent.dist)
regular.dist <- c()
for(i in names(cazy_dist)){
if(!i%in%c("MCTs11", "MCTs12")){
regular.dist <- c(regular.dist,cazy_dist[[i]])
}
}
regular.dist <- data.frame(Group='regular',distance=1/regular.dist)
dist.data <- rbind(regular.dist,soylent.dist)
View(dist.data)
boxplot(dist.data)
require(ggplot2)
g <- ggplot(dist.data,aes(x=Group,y=distance)) + geom_boxplot() +
theme_classic()
g
g <- ggplot(dist.data,aes(x=Group,y=distance,color=Group)) + geom_boxplot() +
theme_classic()
g
g <- ggplot(dist.data,aes(x=Group,y=distance,fill=Group)) + geom_boxplot() +
theme_classic()
g
require(ggsci)
g <- ggplot(dist.data,aes(x=Group,y=distance,fill=Group)) + geom_boxplot() +
theme_classic() + scale_fill_ucscgb()
g
cazy_dist <- lapply(cazyme_list_clr, function(x){
x <- select(x,-X.SampleID)
d <- dist(x)
d <- as.matrix(d)
d[upper.tri(d)] = 0
d <- as.vector(d[d!=0])
d
})
#cazy_dist <- do.call('cbind',cazy_dist)
soylent.dist <- c(cazy_dist[['MCTs11']],cazy_dist[['MCTs12']])
soylent.dist <- data.frame(Group='soylent',distance=soylent.dist)
regular.dist <- c()
for(i in names(cazy_dist)){
if(!i%in%c("MCTs11", "MCTs12")){
regular.dist <- c(regular.dist,cazy_dist[[i]])
}
}
regular.dist <- data.frame(Group='regular',distance=regular.dist)
dist.data <- rbind(regular.dist,soylent.dist)
g <- ggplot(dist.data,aes(x=Group,y=distance,fill=Group)) + geom_boxplot() +
theme_classic() + scale_fill_ucscgb() + ylab("Aichison's distance")
g
g <- ggplot(dist.data,aes(x=Group,y=distance,fill=Group)) + geom_boxplot() +
theme_classic() + scale_fill_ucscgb() + ylab("Aichison's distance") +
theme(axis.title.x = element_blank())
g
g <- ggplot(dist.data,aes(x=Group,y=distance,fill=Group)) + geom_boxplot() +
theme_classic() + scale_fill_ucscgb() + ylab("Aichison's distance") +
theme(axis.title.x = element_blank()) + guide(fill=element_blank())
g <- ggplot(dist.data,aes(x=Group,y=distance,fill=Group)) + geom_boxplot() +
theme_classic() + scale_fill_ucscgb() + ylab("Aichison's distance") +
theme(axis.title.x = element_blank()) + guides(fill=element_blank())
g
g <- ggplot(dist.data,aes(x=Group,y=distance,fill=Group)) + geom_boxplot() +
theme_classic() + scale_fill_ucscgb() + ylab("Aichison's distance") +
theme(axis.title.x = element_blank()) + guides(fill=NULL)
g
g <- ggplot(dist.data,aes(x=Group,y=distance,fill=Group)) + geom_boxplot() +
theme_classic() + scale_fill_ucscgb() + ylab("Aichison's distance") +
theme(axis.title.x = element_blank()) + guides(fill=FALSE)
g
