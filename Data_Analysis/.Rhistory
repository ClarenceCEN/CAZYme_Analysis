for(i in unique(allsigs$id)){
print(i)
subjects <- c(subjects,i)
subjects_type <- c(subjects_type,"subjects")
}
nodes <- c(food_cazyme_pair,subjects)
nodes_type <- c(cazyme_cate,subjects_type)
output.node <- data.frame(nodes=nodes, type=nodes_type)
write.table(output.node, "./data/network/output_node.txt", quote=FALSE, sep="\t", row.names=FALSE)
load('./data/cazyme_food_cor.RData')
sigs <- lapply(cazyme_food_list, function(x) subset(x, fdr_p <= 0.2))
allsigs <- do.call("rbind", sigs)
allsigs$cazy_cat <- ifelse(grepl('AA',allsigs$cazyme),'AA',
ifelse(grepl('CBM',allsigs$cazyme),'CBM',
ifelse(grepl('GT',allsigs$cazyme),'GT',
ifelse(grepl('GH',allsigs$cazyme),'GH',
ifelse(grepl('PL',allsigs$cazyme),'PL','CE')))))
allsigs$bin <- ifelse(allsigs$coef < 0, "Negative (+/-)",
ifelse(allsigs$coef > 0, "Positive (+/+ or -/-)", "NA"))
allsigs$bin <- factor(allsigs$bin, levels = c("Positive (+/+ or -/-)", "Negative (+/-)"))
allsigs$food <- gsub("Dry_Beans_Peas_Other_Legumes_Nuts_and_Seeds", "Legumes", allsigs$food)
allsigs$food <- gsub("Fats_Oils_and_Salad_Dressings", "Fats", allsigs$food)
allsigs$food <- gsub("Grain_Product", "Grains", allsigs$food)
allsigs$food <- gsub("Milk_and_Milk_Products", "Milks", allsigs$food)
allsigs$food <- gsub("Meat_Poultry_Fish_and_Mixtures", "Meats", allsigs$food)
allsigs$food <- gsub("Sugars_Sweets_and_Beverages", "Sweets and Beverages", allsigs$food)
allsigs$food <- gsub("Cereals_not_cooked_or_NS_as_to_cooked", "Grains", allsigs$food)
allsigs$food <- gsub("Grain_mixtures_frozen_plate_meals_soups", "Grains", allsigs$food)
allsigs$food <- gsub("Nuts_nut_butters_and_nut_mixtures", "Nuts", allsigs$food)
allsigs$food <- gsub("Darkgreen_vegetables", "Vegetables", allsigs$food)
allsigs$food <- gsub("Alcoholic_beverages", "Sweets and Beverages", allsigs$food)
allsigs$food <- gsub("Citrus_fruits_juices", "Fruits", allsigs$food)
allsigs$food <- gsub("Deepyellow_vegetables", "Vegetables", allsigs$food)
allsigs$food <- gsub("Cakes_cookies_pies_pastries_bars", "Grains", allsigs$food)
allsigs$food <- gsub("Crackers_and_salty_snacks_from_grain", "Grains", allsigs$food)
allsigs$food <- gsub("Creams_and_cream_substitutes", "Milks", allsigs$food)
allsigs$food <- gsub("Organ_meats_sausages_and_lunchmeats", "Meats", allsigs$food)
allsigs$food <- gsub("Meatpoultry_fish_with_nonmeat", "Meats", allsigs$food)
allsigs$food <- gsub("Fish_and_shellfish", "Meats", allsigs$food)
allsigs$food <- gsub("Other_vegetables", "Vegetables", allsigs$food)
allsigs$food <- gsub("Other_fruits", "Fruits", allsigs$food)
allsigs$food <- gsub("Formulated_nutrition_beverages_energy_drinks_sports_drinks_function", "Sweets and Beverages", allsigs$food)
allsigs$food <- gsub("Nonalcoholic_beverages", "Sweets and Beverages", allsigs$food)
allsigs$food <- gsub("Pancakes_waffles_French_toast_other", "Grains", allsigs$food)
allsigs$food <- gsub("Fruit_juices_and_nectars_excluding_citrus", "Fruits", allsigs$food)
allsigs$food <- gsub("Frozen_and_shelfstable_plate_meals_soups_and_gravies", "Meats", allsigs$food)
allsigs$food <- gsub("Milk_desserts_sauces_gravies", "Milks", allsigs$food)
allsigs$food <- gsub("Milks_and_milk_drinks", "Milks", allsigs$food)
allsigs$food <- gsub("Lamb_veal_game_other", "Meats", allsigs$food)
allsigs$food <- gsub("Pastas_cooked_cereals_rice", "Grains", allsigs$food)
allsigs$food <- gsub("Quick_breads", "Grains", allsigs$food)
allsigs$food <- gsub("Salad_dressings", "Fats", allsigs$food)
allsigs$food <- gsub("Sugars_and_sweets", "Sweets and Beverages", allsigs$food)
allsigs$food <- gsub("Seeds_and_seed_mixtures", "Legumes", allsigs$food)
allsigs$food <- gsub("Tomatoes_and_tomato_mixtures", "Vegetables", allsigs$food)
allsigs$food <- gsub("Egg_mixtures", "Eggs", allsigs$food)
allsigs$food <- gsub("Dried_fruits", "Fruits", allsigs$food)
allsigs$food <- gsub("Yeast", "Grains", allsigs$food)
allsigs$food <- gsub("White_potatoes_and_Puerto_Rican_starchy_vegetables", "Vegetables", allsigs$food)
allsigs$food <- gsub("Vegetables_with_meat_poultry_fish", "Vegetables", allsigs$food)
allsigs$food <- gsub("Water_noncarbonated", "Sweets and Beverages", allsigs$food)
allsigs$food <- gsub("Poultry", "Meats", allsigs$food)
allsigs$food <- gsub("Pork", "Meats", allsigs$food)
allsigs$food <- gsub("Cheeses", "Milks", allsigs$food)
allsigs$food <- gsub("Beef", "Meats", allsigs$food)
allsigs$food <- gsub("Fruits_and_juices_baby_food", "Fruits", allsigs$food)
#for network
allsigs$pairs <- paste0(allsigs$food,'_',allsigs$cazyme)
write.csv(allsigs,"./data/network/food_cazyme_cor_0.2.csv",row.names = F,quote = F)
setwd('G:/Dan_Lab/codes/CAZyme/CAZYme_Analysis/Data_Analysis/')
food <- read.table('./data/masterdecaydiet.txt',header = T)
food$taxonomy <- as.character(food$taxonomy)
split <- strsplit(food$taxonomy,";")
foodStrings <- sapply(split,function(x) paste(x[1:2],collapse=";"))
for (i in 1:7) taxaStrings = gsub("(;[A-z]__$)?(;NA$)?","",foodStrings,perl=T) # clean tips
food_L2 <- rowsum(food[-ncol(food)],foodStrings)
rownames(food_L2) <- gsub(".*;L2_",'',rownames(food_L2))
#rownames(food_L2) = sapply(strsplit(food$taxonomy,";"),function(x) paste(x[1:2],collapse=";"));
load("./data/cazymes_to_keep.RData")
cazyme <- read.table('./data/Cazyme_total2.txt',sep='\t',header = T,row.names = 1)
#cazyme <- read.table('./data/Cazyme_total_try.txt',sep='\t',header = T,row.names = 1)
cazyme <- cazyme[cazymes_to_keep,]
cazyme <- cazyme[-grep('Other',rownames(cazyme)),]
rownames(cazyme) <- gsub(".*;L4_",'',rownames(cazyme))
map <- read.table("./maps/SampleID_map.txt", sep = "\t", header = T, comment = "")
# identify soylent samples
soylent <- map[map$UserName %in% c("MCTs11", "MCTs12"),]
soylent <- as.character(soylent$X.SampleID)
cazyme <- cazyme[,!colnames(cazyme)%in%soylent]
food_L2 <- food_L2[,!colnames(food_L2)%in%soylent]
samples <- intersect(colnames(cazyme),colnames(food_L2))
cazyme <- cazyme[samples]
food_L2 <- food_L2[samples]
cazyme_c <- as.data.frame(t(cazyme))
cazyme_c <- rownames_to_column(cazyme_c,var = 'X.SampleID')
cazyme_c <- merge(cazyme_c,map[c('X.SampleID','UserName')],by='X.SampleID')
food_c <- as.data.frame(t(food_L2))
food_c <- rownames_to_column(food_c,var='X.SampleID')
food_c <- merge(food_c,map[c('X.SampleID','UserName')],by='X.SampleID')
cazyme_food_list <- list()
for(i in unique(food_c$UserName)){
print(i)
coef_v <- c()
fdr_v <- c()
food_v <- c()
cazyme_v <- c()
p_v <- c()
id <- c()
temp_food <- food_c[food_c$UserName==i,!colnames(food_c)%in%c('X.SampleID','UserName')]
temp_cazyme <- cazyme_c[cazyme_c$UserName==i,!colnames(cazyme_c)%in%c('X.SampleID','UserName')]
temp_cor_r <- corr.test(temp_food,temp_cazyme,adjust = 'fdr',method = 'spearman')$r
temp_cor_p <- corr.test(temp_food,temp_cazyme,adjust = 'fdr',method = 'spearman')$p
for(a in 1:nrow(temp_cor_p)){
#print(a)
for (b in 1:ncol(temp_cor_p)){
if(!is.na(temp_cor_p[a,b])){
coef_v <- c(coef_v,temp_cor_r[a,b])
fdr_v <- c(fdr_v,temp_cor_p[a,b])
food_v <- c(food_v,colnames(temp_food)[a])
cazyme_v <- c(cazyme_v,colnames(temp_cazyme)[b])
id <- c(id,i)
}
}
}
#fdr_v <- p.adjust(p_v,method = 'fdr')
temp_cor_df <- data.frame(food=food_v,cazyme=cazyme_v,coef=coef_v,id=id,fdr_p=fdr_v)
cazyme_food_list[[i]] <- temp_cor_df
}
View(temp_cor_p)
View(temp_cor_df)
View(cazyme_food_list)
cazyme_food_list[["MCTs29"]]
View(cazyme_food_list[["MCTs29"]])
load('./data/cazyme_food_cor.RData')
sigs <- lapply(cazyme_food_list, function(x) subset(x, fdr_p <= 0.2))
allsigs <- do.call("rbind", sigs)
allsigs$cazy_cat <- ifelse(grepl('AA',allsigs$cazyme),'AA',
ifelse(grepl('CBM',allsigs$cazyme),'CBM',
ifelse(grepl('GT',allsigs$cazyme),'GT',
ifelse(grepl('GH',allsigs$cazyme),'GH',
ifelse(grepl('PL',allsigs$cazyme),'PL','CE')))))
allsigs$bin <- ifelse(allsigs$coef < 0, "Negative (+/-)",
ifelse(allsigs$coef > 0, "Positive (+/+ or -/-)", "NA"))
allsigs$bin <- factor(allsigs$bin, levels = c("Positive (+/+ or -/-)", "Negative (+/-)"))
View(allsigs)
allsigs$food <- gsub("Dry_Beans_Peas_Other_Legumes_Nuts_and_Seeds", "Legumes", allsigs$food)
allsigs$food <- gsub("Fats_Oils_and_Salad_Dressings", "Fats", allsigs$food)
allsigs$food <- gsub("Grain_Product", "Grains", allsigs$food)
allsigs$food <- gsub("Milk_and_Milk_Products", "Milks", allsigs$food)
allsigs$food <- gsub("Meat_Poultry_Fish_and_Mixtures", "Meats", allsigs$food)
allsigs$food <- gsub("Sugars_Sweets_and_Beverages", "Sweets and Beverages", allsigs$food)
allsigs$food <- gsub("Cereals_not_cooked_or_NS_as_to_cooked", "Grains", allsigs$food)
allsigs$food <- gsub("Grain_mixtures_frozen_plate_meals_soups", "Grains", allsigs$food)
allsigs$food <- gsub("Nuts_nut_butters_and_nut_mixtures", "Nuts", allsigs$food)
allsigs$food <- gsub("Darkgreen_vegetables", "Vegetables", allsigs$food)
allsigs$food <- gsub("Alcoholic_beverages", "Sweets and Beverages", allsigs$food)
allsigs$food <- gsub("Citrus_fruits_juices", "Fruits", allsigs$food)
allsigs$food <- gsub("Deepyellow_vegetables", "Vegetables", allsigs$food)
allsigs$food <- gsub("Cakes_cookies_pies_pastries_bars", "Grains", allsigs$food)
allsigs$food <- gsub("Crackers_and_salty_snacks_from_grain", "Grains", allsigs$food)
allsigs$food <- gsub("Creams_and_cream_substitutes", "Milks", allsigs$food)
allsigs$food <- gsub("Organ_meats_sausages_and_lunchmeats", "Meats", allsigs$food)
allsigs$food <- gsub("Meatpoultry_fish_with_nonmeat", "Meats", allsigs$food)
allsigs$food <- gsub("Fish_and_shellfish", "Meats", allsigs$food)
allsigs$food <- gsub("Other_vegetables", "Vegetables", allsigs$food)
allsigs$food <- gsub("Other_fruits", "Fruits", allsigs$food)
allsigs$food <- gsub("Formulated_nutrition_beverages_energy_drinks_sports_drinks_function", "Sweets and Beverages", allsigs$food)
allsigs$food <- gsub("Nonalcoholic_beverages", "Sweets and Beverages", allsigs$food)
allsigs$food <- gsub("Pancakes_waffles_French_toast_other", "Grains", allsigs$food)
allsigs$food <- gsub("Fruit_juices_and_nectars_excluding_citrus", "Fruits", allsigs$food)
allsigs$food <- gsub("Frozen_and_shelfstable_plate_meals_soups_and_gravies", "Meats", allsigs$food)
allsigs$food <- gsub("Milk_desserts_sauces_gravies", "Milks", allsigs$food)
allsigs$food <- gsub("Milks_and_milk_drinks", "Milks", allsigs$food)
allsigs$food <- gsub("Lamb_veal_game_other", "Meats", allsigs$food)
allsigs$food <- gsub("Pastas_cooked_cereals_rice", "Grains", allsigs$food)
allsigs$food <- gsub("Quick_breads", "Grains", allsigs$food)
allsigs$food <- gsub("Salad_dressings", "Fats", allsigs$food)
allsigs$food <- gsub("Sugars_and_sweets", "Sweets and Beverages", allsigs$food)
allsigs$food <- gsub("Seeds_and_seed_mixtures", "Legumes", allsigs$food)
allsigs$food <- gsub("Tomatoes_and_tomato_mixtures", "Vegetables", allsigs$food)
allsigs$food <- gsub("Egg_mixtures", "Eggs", allsigs$food)
allsigs$food <- gsub("Dried_fruits", "Fruits", allsigs$food)
allsigs$food <- gsub("Yeast", "Grains", allsigs$food)
allsigs$food <- gsub("White_potatoes_and_Puerto_Rican_starchy_vegetables", "Vegetables", allsigs$food)
allsigs$food <- gsub("Vegetables_with_meat_poultry_fish", "Vegetables", allsigs$food)
allsigs$food <- gsub("Water_noncarbonated", "Sweets and Beverages", allsigs$food)
allsigs$food <- gsub("Poultry", "Meats", allsigs$food)
allsigs$food <- gsub("Pork", "Meats", allsigs$food)
allsigs$food <- gsub("Cheeses", "Milks", allsigs$food)
allsigs$food <- gsub("Beef", "Meats", allsigs$food)
allsigs$food <- gsub("Fruits_and_juices_baby_food", "Fruits", allsigs$food)
#for network
allsigs$pairs <- paste0(allsigs$food,'_',allsigs$cazyme)
allsigs <- arrange(allsigs,allsigs$fdr_p)
View(allsigs)
allsigs$detect_dup <- paste0(allsigs$food,'_',allsigs$cazyme,"_",allsigs$id)
allsigs <- allsigs[!duplicated(allsigs$detect_dup)]
allsigs <- allsigs[!duplicated(allsigs$detect_dup),]
write.csv(allsigs,"./data/network/food_cazyme_cor_0.2.csv",row.names = F,quote = F)
load('./data/cazyme_food_cor.RData')
source(file = "G:/Dan_Lab/dietstudy_analyses-master/lib/colors/UserNameColors.R")
UserNameColors['MCTs05'] <- '#99ff00'
setwd('G:/Dan_Lab/codes/CAZyme/CAZYme_Analysis/Data_Analysis/')
food <- read.table('./data/masterdecaydiet.txt',header = T)
food$taxonomy <- as.character(food$taxonomy)
split <- strsplit(food$taxonomy,";")
foodStrings <- sapply(split,function(x) paste(x[1:2],collapse=";"))
for (i in 1:7) taxaStrings = gsub("(;[A-z]__$)?(;NA$)?","",foodStrings,perl=T) # clean tips
food_L2 <- rowsum(food[-ncol(food)],foodStrings)
rownames(food_L2) <- gsub(".*;L2_",'',rownames(food_L2))
#rownames(food_L2) = sapply(strsplit(food$taxonomy,";"),function(x) paste(x[1:2],collapse=";"));
load("./data/cazymes_to_keep.RData")
cazyme <- read.table('./data/Cazyme_total2.txt',sep='\t',header = T,row.names = 1)
#cazyme <- read.table('./data/Cazyme_total_try.txt',sep='\t',header = T,row.names = 1)
cazyme <- cazyme[cazymes_to_keep,]
cazyme <- cazyme[-grep('Other',rownames(cazyme)),]
rownames(cazyme) <- gsub(".*;L4_",'',rownames(cazyme))
map <- read.table("./maps/SampleID_map.txt", sep = "\t", header = T, comment = "")
# identify soylent samples
soylent <- map[map$UserName %in% c("MCTs11", "MCTs12"),]
soylent <- as.character(soylent$X.SampleID)
cazyme <- cazyme[,!colnames(cazyme)%in%soylent]
food_L2 <- food_L2[,!colnames(food_L2)%in%soylent]
samples <- intersect(colnames(cazyme),colnames(food_L2))
cazyme <- cazyme[samples]
food_L2 <- food_L2[samples]
cazyme_c <- as.data.frame(t(cazyme))
cazyme_c <- rownames_to_column(cazyme_c,var = 'X.SampleID')
cazyme_c <- merge(cazyme_c,map[c('X.SampleID','UserName')],by='X.SampleID')
food_c <- as.data.frame(t(food_L2))
food_c <- rownames_to_column(food_c,var='X.SampleID')
food_c <- merge(food_c,map[c('X.SampleID','UserName')],by='X.SampleID')
load('./data/cazyme_food_cor.RData')
sigs <- lapply(cazyme_food_list, function(x) subset(x, fdr_p <= 0.2))
allsigs <- do.call("rbind", sigs)
allsigs$cazy_cat <- ifelse(grepl('AA',allsigs$cazyme),'AA',
ifelse(grepl('CBM',allsigs$cazyme),'CBM',
ifelse(grepl('GT',allsigs$cazyme),'GT',
ifelse(grepl('GH',allsigs$cazyme),'GH',
ifelse(grepl('PL',allsigs$cazyme),'PL','CE')))))
allsigs$bin <- ifelse(allsigs$coef < 0, "Negative (+/-)",
ifelse(allsigs$coef > 0, "Positive (+/+ or -/-)", "NA"))
allsigs$bin <- factor(allsigs$bin, levels = c("Positive (+/+ or -/-)", "Negative (+/-)"))
allsigs$pairs <- paste0(allsigs$food,'_',allsigs$cazyme)
cazyme_set <- as.character(unique(allsigs$pairs))
select_cazymes <- c()
for(i in cazyme_set){
temp_data = allsigs[allsigs$pairs==i,]
if(length(unique(temp_data$bin))>1){
print(i)
select_cazymes <- c(select_cazymes,i)
}
}
selected_data <- allsigs[allsigs$pairs%in%select_cazymes,]
selected_food_df <- list()
for(i in unique(selected_data$pairs)){
print(i)
selected_food_df[[i]] <- subset(selected_data,selected_data$pairs==i)
}
food_c$UserName <- as.character(food_c$UserName)
cazyme_c$UserName <- as.character(cazyme_c$UserName)
selected_food <- list()
selected_food <- lapply(selected_food_df,function(x){
food_c[food_c$UserName%in%as.character(x$id),colnames(food_c)%in%c("UserName",as.character(x$food))] %>%
melt(id.vars = 'UserName',variable.name = 'food',value.name = 'weight')
})
selected_cazyme <- list()
selected_cazyme <- lapply(selected_food_df,function(x){
cazyme_c[cazyme_c$UserName%in%as.character(x$id),colnames(cazyme_c)%in%c("UserName",as.character(x$cazyme))] %>%
melt(id.vars = 'UserName',variable.name = 'cazyme',value.name = 'count')
})
selected_cazyme_plot <- do.call("rbind", selected_cazyme)
selected_food_plot <- do.call("rbind", selected_food)
#selected_plot <- merge(selected_food,selected_cazyme,by='UserName',all=F)
selected_plot <- bind_cols(selected_food_plot,selected_cazyme_plot)
selected_plot <- selected_plot[,names(selected_plot)!='UserName1']
selected_plot <- mutate_if(selected_plot,is.factor,as.character)
unique(selected_plot$food)
#Organ_meats_sausages_and_lunchmeats_CBM4
plot1 <- subset(selected_plot,selected_plot$food=='Organ_meats_sausages_and_lunchmeats')
plot1 <- filter(plot1,plot1$cazyme=='CBM4')
#Organ_meats_sausages_and_lunchmeats_CBM4
plot1 <- subset(selected_plot,selected_plot$food=='Organ_meats_sausages_and_lunchmeats')
plot1 <- filter(plot1,plot1$cazyme=='CBM4')
g <- ggplot(plot1,aes(x=weight,y=count))+geom_point(aes(fill=UserName),alpha=0.5,size=4,shape=21)+
facet_grid(~UserName,scales = 'free') +theme_classic() +
stat_smooth(method = lm,color="black",size=1,se=FALSE)+
scale_fill_manual(values = UserNameColors) +
guides(size=NULL) +
ylab('GH24') + xlab("Grain mixtures frozen plate meals soups")
g
g <- ggplot(plot1,aes(x=weight,y=count))+geom_point(aes(fill=UserName),alpha=0.5,size=4,shape=21)+
facet_grid(~UserName,scales = 'free') +theme_classic() +
stat_smooth(method = lm,color="black",size=1,se=FALSE)+
scale_fill_manual(values = UserNameColors) +
guides(size=NULL) +
ylab('CBM4') + xlab("Organ_meats_sausages_and_lunchmeats")
g
ggsave("./result/linear_plots/L2_food/Organ_meats_sausages_and_lunchmeats_CBM4.pdf",
width = 5,height = 5)
#Organ_meats_sausages_and_lunchmeats_GH26
plot2 <- subset(selected_plot,selected_plot$food=='Organ_meats_sausages_and_lunchmeats')
plot2 <- filter(plot2,plot2$cazyme=='GH26')
g <- ggplot(plot2,aes(x=weight,y=count))+geom_point(aes(fill=UserName),alpha=0.5,size=4,shape=21)+
facet_grid(~UserName,scales = 'free') +theme_classic() +
stat_smooth(method = lm,color="black",size=1,se=FALSE)+
scale_fill_manual(values = UserNameColors) +
guides(size=NULL) +
ylab('GH24') + xlab("Grain mixtures frozen plate meals soups")
g
g <- ggplot(plot2,aes(x=weight,y=count))+geom_point(aes(fill=UserName),alpha=0.5,size=4,shape=21)+
facet_grid(~UserName,scales = 'free') +theme_classic() +
stat_smooth(method = lm,color="black",size=1,se=FALSE)+
scale_fill_manual(values = UserNameColors) +
guides(size=NULL) +
ylab('GH26') + xlab("Organ_meats_sausages_and_lunchmeats")
g
ggsave("./result/linear_plots/L2_food/Organ_meats_sausages_and_lunchmeats_GH26.pdf",
width = 5,height = 5)
#Deepyellow_vegetables_GH137
plot3 <- subset(selected_plot,selected_plot$food=='Deepyellow_vegetables')
plot3 <- filter(plot3,plot3$cazyme=='GH137')
g <- ggplot(plot3,aes(x=weight,y=count))+geom_point(aes(fill=UserName),alpha=0.5,size=4,shape=21)+
facet_grid(.~UserName,scales = "free") +theme_classic() +
stat_smooth(method = lm,color="black",size=1,se=FALSE)+
scale_fill_manual(values = UserNameColors) +
ylab('CBM61') + xlab("Meatpoultry_fish_with_nonmeat")
g
ggsave("./result/linear_plots/L2_food/Deepyellow_vegetables_GH137.pdf",
width = 5,height = 5)
#Citrus_fruits_juices_CBM48
plot4 <- subset(selected_plot,selected_plot$food=='Citrus_fruits_juices')
plot4 <- filter(plot4,plot4$cazyme=='CBM48')
g <- ggplot(plot4,aes(x=weight,y=count))+geom_point(aes(fill=UserName),alpha=0.5,size=4,shape=21)+
facet_grid(.~UserName,scales = "free") +theme_classic() +
stat_smooth(method = lm,color="black",size=1,se=FALSE)+
scale_fill_manual(values = UserNameColors) +
ylab('CBM66') + xlab("Deepyellow_vegetables")
g
g <- ggplot(plot4,aes(x=weight,y=count))+geom_point(aes(fill=UserName),alpha=0.5,size=4,shape=21)+
facet_grid(.~UserName,scales = "free") +theme_classic() +
stat_smooth(method = lm,color="black",size=1,se=FALSE)+
scale_fill_manual(values = UserNameColors) +
ylab('CBM48') + xlab("Citrus_fruits_juices")
g
ggsave("./result/linear_plots/L2_food/Citrus_fruits_juices_CBM48.pdf",
width = 5,height = 5)
#Citrus_fruits_juices_GT5
plot5 <- subset(selected_plot,selected_plot$food=='Citrus_fruits_juices')
plot5 <- filter(plot5,plot5$cazyme=='GT5')
g <- ggplot(plot5,aes(x=weight,y=count))+geom_point(aes(fill=UserName),alpha=0.5,size=4,shape=21)+
facet_grid(.~UserName,scales = "free") +theme_classic() +
stat_smooth(method = lm,color="black",size=1,se=FALSE)+
scale_fill_manual(values = UserNameColors) +
ylab('GH5') + xlab("Deepyellow_vegetables")
g
ggsave("./result/linear_plots/L2_food/Citrus_fruits_juices_GT5.pdf",
width = 5,height = 5)
#Cereals_not_cooked_or_NS_as_to_cooked_GH51
plot6 <- subset(selected_plot,selected_plot$food=='Cereals_not_cooked_or_NS_as_to_cooked')
plot6 <- filter(plot6,plot6$cazyme=='GH51')
g <- ggplot(plot6,aes(x=weight,y=count))+geom_point(aes(fill=UserName),alpha=0.5,size=4,shape=21)+
facet_grid(.~UserName,scales = "free") +theme_classic() +
stat_smooth(method = lm,color="black",size=1,se=FALSE)+
scale_fill_manual(values = UserNameColors) +
ylab('CBM22') + xlab("Citrus_fruits_juices")
g
ggsave("./result/linear_plots/L2_food/Cereals_not_cooked_or_NS_as_to_cooked_GH51.pdf",
width = 5,height = 5)
View(allsigs)
load('./data/cazyme_food_cor_L3.RData')
sigs <- lapply(cazyme_food_list, function(x) subset(x, fdr_p <= 0.2))
allsigs <- do.call("rbind", sigs)
allsigs$cazy_cat <- ifelse(grepl('AA',allsigs$cazyme),'AA',
ifelse(grepl('CBM',allsigs$cazyme),'CBM',
ifelse(grepl('GT',allsigs$cazyme),'GT',
ifelse(grepl('GH',allsigs$cazyme),'GH',
ifelse(grepl('PL',allsigs$cazyme),'PL','CE')))))
allsigs$bin <- ifelse(allsigs$coef < 0, "Negative (+/-)",
ifelse(allsigs$coef > 0, "Positive (+/+ or -/-)", "NA"))
allsigs$bin <- factor(allsigs$bin, levels = c("Positive (+/+ or -/-)", "Negative (+/-)"))
allsigs$pairs <- paste0(allsigs$food,'_',allsigs$cazyme)
cazyme_set <- as.character(unique(allsigs$pairs))
select_cazymes <- c()
for(i in cazyme_set){
temp_data = allsigs[allsigs$pairs==i,]
if(length(unique(temp_data$bin))>1){
print(i)
select_cazymes <- c(select_cazymes,i)
}
}
#L1
setwd('G:/Dan_Lab/codes/CAZyme/CAZYme_Analysis/Data_Analysis/')
#L1
setwd('G:/Dan_Lab/codes/CAZyme/CAZYme_Analysis/Data_Analysis/')
food <- read.table('./data/masterdecaydiet.txt',header = T)
food$taxonomy <- as.character(food$taxonomy)
split <- strsplit(food$taxonomy,";")
foodStrings <- sapply(split,function(x) paste(x[1:1],collapse=";"))
for (i in 1:7) taxaStrings = gsub("(;[A-z]__$)?(;NA$)?","",foodStrings,perl=T) # clean tips
food_L1 <- rowsum(food[-ncol(food)],foodStrings)
rownames(food_L1) <- gsub(".*;L1_",'',rownames(food_L1))
load("./data/cazymes_to_keep.RData")
cazyme <- read.table('./data/Cazyme_total2.txt',sep='\t',header = T,row.names = 1)
#cazyme <- read.table('./data/Cazyme_total_try.txt',sep='\t',header = T,row.names = 1)
cazyme <- cazyme[cazymes_to_keep,]
cazyme <- cazyme[-grep('Other',rownames(cazyme)),]
rownames(cazyme) <- gsub(".*;L4_",'',rownames(cazyme))
map <- read.table("./maps/SampleID_map.txt", sep = "\t", header = T, comment = "")
# identify soylent samples
soylent <- map[map$UserName %in% c("MCTs11", "MCTs12"),]
soylent <- as.character(soylent$X.SampleID)
cazyme <- cazyme[,!colnames(cazyme)%in%soylent]
food_L1 <- food_L1[,!colnames(food_L1)%in%soylent]
samples <- intersect(colnames(cazyme),colnames(food_L1))
cazyme <- cazyme[samples]
food_L1 <- food_L1[samples]
cazyme_c <- as.data.frame(t(cazyme))
cazyme_c <- rownames_to_column(cazyme_c,var = 'X.SampleID')
cazyme_c <- merge(cazyme_c,map[c('X.SampleID','UserName')],by='X.SampleID')
food_c <- as.data.frame(t(food_L1))
food_c <- rownames_to_column(food_c,var='X.SampleID')
food_c <- merge(food_c,map[c('X.SampleID','UserName')],by='X.SampleID')
cazyme_food_list <- list()
for(i in unique(food_c$UserName)){
print(i)
coef_v <- c()
fdr_v <- c()
food_v <- c()
cazyme_v <- c()
p_v <- c()
id <- c()
temp_food <- food_c[food_c$UserName==i,!colnames(food_c)%in%c('X.SampleID','UserName')]
temp_cazyme <- cazyme_c[cazyme_c$UserName==i,!colnames(cazyme_c)%in%c('X.SampleID','UserName')]
temp_cor_r <- corr.test(temp_food,temp_cazyme,adjust = 'fdr',method = 'spearman')$r
temp_cor_p <- corr.test(temp_food,temp_cazyme,adjust = 'fdr',method = 'spearman')$p
for(a in 1:nrow(temp_cor_p)){
#print(a)
for (b in 1:ncol(temp_cor_p)){
if(!is.na(temp_cor_p[a,b])){
coef_v <- c(coef_v,temp_cor_r[a,b])
fdr_v <- c(fdr_v,temp_cor_p[a,b])
food_v <- c(food_v,colnames(temp_food)[a])
cazyme_v <- c(cazyme_v,colnames(temp_cazyme)[b])
id <- c(id,i)
}
}
}
#fdr_v <- p.adjust(p_v,method = 'fdr')
temp_cor_df <- data.frame(food=food_v,cazyme=cazyme_v,coef=coef_v,id=id,fdr_p=fdr_v)
cazyme_food_list[[i]] <- temp_cor_df
}
sigs <- lapply(cazyme_food_list, function(x) subset(x, fdr_p <= 0.2))
allsigs <- do.call("rbind", sigs)
allsigs$cazy_cat <- ifelse(grepl('AA',allsigs$cazyme),'AA',
ifelse(grepl('CBM',allsigs$cazyme),'CBM',
ifelse(grepl('GT',allsigs$cazyme),'GT',
ifelse(grepl('GH',allsigs$cazyme),'GH',
ifelse(grepl('PL',allsigs$cazyme),'PL','CE')))))
allsigs$bin <- ifelse(allsigs$coef < 0, "Negative (+/-)",
ifelse(allsigs$coef > 0, "Positive (+/+ or -/-)", "NA"))
allsigs$bin <- factor(allsigs$bin, levels = c("Positive (+/+ or -/-)", "Negative (+/-)"))
allsigs$pairs <- paste0(allsigs$food,'_',allsigs$cazyme)
cazyme_set <- as.character(unique(allsigs$pairs))
select_cazymes <- c()
for(i in cazyme_set){
temp_data = allsigs[allsigs$pairs==i,]
if(length(unique(temp_data$bin))>1){
print(i)
select_cazymes <- c(select_cazymes,i)
}
}
sigs <- lapply(cazyme_food_list, function(x) subset(x, fdr_p <= 0.5))
allsigs <- do.call("rbind", sigs)
allsigs$cazy_cat <- ifelse(grepl('AA',allsigs$cazyme),'AA',
ifelse(grepl('CBM',allsigs$cazyme),'CBM',
ifelse(grepl('GT',allsigs$cazyme),'GT',
ifelse(grepl('GH',allsigs$cazyme),'GH',
ifelse(grepl('PL',allsigs$cazyme),'PL','CE')))))
allsigs$bin <- ifelse(allsigs$coef < 0, "Negative (+/-)",
ifelse(allsigs$coef > 0, "Positive (+/+ or -/-)", "NA"))
allsigs$bin <- factor(allsigs$bin, levels = c("Positive (+/+ or -/-)", "Negative (+/-)"))
allsigs$pairs <- paste0(allsigs$food,'_',allsigs$cazyme)
cazyme_set <- as.character(unique(allsigs$pairs))
select_cazymes <- c()
for(i in cazyme_set){
temp_data = allsigs[allsigs$pairs==i,]
if(length(unique(temp_data$bin))>1){
print(i)
select_cazymes <- c(select_cazymes,i)
}
}
sigs <- lapply(cazyme_food_list, function(x) subset(x, fdr_p <= 0.3))
allsigs <- do.call("rbind", sigs)
allsigs$cazy_cat <- ifelse(grepl('AA',allsigs$cazyme),'AA',
ifelse(grepl('CBM',allsigs$cazyme),'CBM',
ifelse(grepl('GT',allsigs$cazyme),'GT',
ifelse(grepl('GH',allsigs$cazyme),'GH',
ifelse(grepl('PL',allsigs$cazyme),'PL','CE')))))
allsigs$bin <- ifelse(allsigs$coef < 0, "Negative (+/-)",
ifelse(allsigs$coef > 0, "Positive (+/+ or -/-)", "NA"))
allsigs$bin <- factor(allsigs$bin, levels = c("Positive (+/+ or -/-)", "Negative (+/-)"))
allsigs$pairs <- paste0(allsigs$food,'_',allsigs$cazyme)
cazyme_set <- as.character(unique(allsigs$pairs))
select_cazymes <- c()
for(i in cazyme_set){
temp_data = allsigs[allsigs$pairs==i,]
if(length(unique(temp_data$bin))>1){
print(i)
select_cazymes <- c(select_cazymes,i)
}
}
