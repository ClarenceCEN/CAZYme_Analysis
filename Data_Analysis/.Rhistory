ylab("Food") +
xlab("Spearman correlation") +
scale_x_continuous(trans = "reverse")
myplot
ggsave('./result/food_cor4.pdf',height = 8,width = 10,limitsize = F)
myplot <- ggplot(data = allsigs, aes(x = coef, y = food, size = -log(fdr_p), color = cazy_cat)) +
geom_point(alpha = 0.5) +
#geom_point(alpha = 0.8, color = "darkgrey", pch = 21) +
facet_grid(id~bin, scales = "free", space = "free_y")+
scale_color_manual(values = as.character(sample(pal,6))) +
theme_classic() +
guides(color = guide_legend(nrow = 10, title = "Cazyme Catgory", title.position = "top"),
size = guide_legend(title.position = "top", title = "-log(FDR p-value)")) +
theme(legend.position = "right",
axis.text.y = element_text(size = 12, color = "black"),
axis.text.x = element_text(size = 10, color = "black"),
panel.grid.major = element_line(colour = "lightgrey"),
strip.text = element_text(size = 10, color = "black"),
axis.title = element_text(size = 12),
legend.text = element_text(size = 7),
legend.title = element_text(size = 8)) +
ylab("Food") +
xlab("Spearman correlation") +
scale_x_continuous(trans = "reverse")
myplot
ggsave('./result/food_cor4.pdf',height = 10,width = 10,limitsize = F)
myplot <- ggplot(data = allsigs, aes(x = coef, y = cazyme, size = -log(fdr_p), color = id)) +
geom_point(alpha = 0.8) +
#geom_point(alpha = 0.8, color = "darkgrey", pch = 21) +
facet_grid(food~bin, scales = "free", space = "free_y")+
scale_color_manual(values = UserNameColors) +
theme_classic() +
guides(color = guide_legend(nrow = 10, title = "Subject", title.position = "top"),
size = guide_legend(title.position = "top", title = "-log(FDR p-value)")) +
theme(legend.position = "right",
axis.text.y = element_blank(),
axis.text.x = element_text(size = 9, color = "black"),
panel.grid.major = element_line(colour = "lightgrey"),
strip.text = element_text(size = 10, color = "black"),
axis.title = element_text(size = 12),
legend.text = element_text(size = 7),
legend.title = element_text(size = 8)) +
ylab("Cazyme") +
xlab("Spearman correlation") +
scale_x_continuous(trans = "reverse")
myplot
ggsave('./result/food_cor.pdf',height = 15,width = 8,limitsize = F)
ggsave('./result/food_cor.pdf',height = 18,width = 8,limitsize = F)
myplot <- ggplot(data = allsigs, aes(x = coef, y = id, size = -log(fdr_p), color = cazy_cat)) +
geom_point(alpha = 0.5) +
#geom_point(alpha = 0.8, color = "darkgrey", pch = 21) +
facet_grid(food~bin, scales = "free", space = "free_y")+
scale_color_manual(values = as.character(sample(pal,6))) +
theme_classic() +
guides(color = guide_legend(nrow = 10, title = "Cazyme Catgory", title.position = "top"),
size = guide_legend(title.position = "top", title = "-log(FDR p-value)")) +
theme(legend.position = "right",
axis.text.y = element_text(size = 12, color = "black"),
axis.text.x = element_text(size = 10, color = "black"),
panel.grid.major = element_line(colour = "lightgrey"),
strip.text = element_text(size = 10, color = "black"),
axis.title = element_text(size = 12),
legend.text = element_text(size = 7),
legend.title = element_text(size = 8)) +
ylab("Subject") +
xlab("Spearman correlation") +
scale_x_continuous(trans = "reverse")
myplot
myplot <- ggplot(data = allsigs, aes(x = coef, y = id, size = -log(fdr_p), color = cazy_cat)) +
geom_point(alpha = 0.5) +
#geom_point(alpha = 0.8, color = "darkgrey", pch = 21) +
facet_grid(food~bin, scales = "free", space = "free_y")+
scale_color_manual(values = as.character(sample(pal,6))) +
theme_classic() +
guides(color = guide_legend(nrow = 10, title = "Cazyme Catgory", title.position = "top"),
size = guide_legend(title.position = "top", title = "-log(FDR p-value)")) +
theme(legend.position = "right",
axis.text.y = element_text(size = 12, color = "black"),
axis.text.x = element_text(size = 10, color = "black"),
panel.grid.major = element_line(colour = "lightgrey"),
strip.text = element_text(size = 10, color = "black"),
axis.title = element_text(size = 12),
legend.text = element_text(size = 7),
legend.title = element_text(size = 8)) +
ylab("Subject") +
xlab("Spearman correlation") +
scale_x_continuous(trans = "reverse")
myplot
myplot <- ggplot(data = allsigs, aes(x = coef, y = id, size = -log(fdr_p), color = cazy_cat)) +
geom_point(alpha = 0.5) +
#geom_point(alpha = 0.8, color = "darkgrey", pch = 21) +
facet_grid(food~bin, scales = "free", space = "free_y")+
scale_color_manual(values = as.character(sample(pal,6))) +
theme_classic() +
guides(color = guide_legend(nrow = 10, title = "Cazyme Catgory", title.position = "top"),
size = guide_legend(title.position = "top", title = "-log(FDR p-value)")) +
theme(legend.position = "right",
axis.text.y = element_text(size = 12, color = "black"),
axis.text.x = element_text(size = 10, color = "black"),
panel.grid.major = element_line(colour = "lightgrey"),
strip.text = element_text(size = 10, color = "black"),
axis.title = element_text(size = 12),
legend.text = element_text(size = 7),
legend.title = element_text(size = 8)) +
ylab("Subject") +
xlab("Spearman correlation") +
scale_x_continuous(trans = "reverse")
myplot
myplot <- ggplot(data = allsigs, aes(x = coef, y = id, size = -log(fdr_p), color = cazy_cat)) +
geom_point(alpha = 0.5) +
#geom_point(alpha = 0.8, color = "darkgrey", pch = 21) +
facet_grid(food~bin, scales = "free", space = "free_y")+
scale_color_manual(values = as.character(sample(pal,6))) +
theme_classic() +
guides(color = guide_legend(nrow = 10, title = "Cazyme Catgory", title.position = "top"),
size = guide_legend(title.position = "top", title = "-log(FDR p-value)")) +
theme(legend.position = "right",
axis.text.y = element_text(size = 12, color = "black"),
axis.text.x = element_text(size = 10, color = "black"),
panel.grid.major = element_line(colour = "lightgrey"),
strip.text = element_text(size = 10, color = "black"),
axis.title = element_text(size = 12),
legend.text = element_text(size = 7),
legend.title = element_text(size = 8)) +
ylab("Subject") +
xlab("Spearman correlation") +
scale_x_continuous(trans = "reverse")
myplot
ggsave('./result/food_cor3.pdf',height = 12,width = 10,limitsize = F)
load('./data/cazyme_food_cor.RData')
sigs <- lapply(cazyme_food_list, function(x) subset(x, fdr_p <= 0.2))
allsigs <- do.call("rbind", sigs)
allsigs$cazy_cat <- ifelse(grepl('AA',allsigs$cazyme),'AA',
ifelse(grepl('CBM',allsigs$cazyme),'CBM',
ifelse(grepl('GT',allsigs$cazyme),'GT',
ifelse(grepl('GH',allsigs$cazyme),'GH',
ifelse(grepl('PL',allsigs$cazyme),'PL','CE')))))
allsigs$bin <- ifelse(allsigs$coef < 0, "Negative (+/-)",
ifelse(allsigs$coef > 0, "Positive (+/+ or -/-)", "NA"))
allsigs$bin <- factor(allsigs$bin, levels = c("Positive (+/+ or -/-)", "Negative (+/-)"))
allsigs$pairs <- paste0(allsigs$food,'_',allsigs$cazyme)
cazyme_set <- as.character(unique(allsigs$pairs))
cazyme_food_list
View(cazyme_food_list)
save(cazyme_food_list,file = './data/cazyme_food_cor_try_L3.RData')
load('./data/cazyme_food_cor_try.RData')
sigs <- lapply(cazyme_food_list, function(x) subset(x, fdr_p <= 0.2))
allsigs <- do.call("rbind", sigs)
allsigs$cazy_cat <- ifelse(grepl('AA',allsigs$cazyme),'AA',
ifelse(grepl('CBM',allsigs$cazyme),'CBM',
ifelse(grepl('GT',allsigs$cazyme),'GT',
ifelse(grepl('GH',allsigs$cazyme),'GH',
ifelse(grepl('PL',allsigs$cazyme),'PL','CE')))))
allsigs$bin <- ifelse(allsigs$coef < 0, "Negative (+/-)",
ifelse(allsigs$coef > 0, "Positive (+/+ or -/-)", "NA"))
allsigs$bin <- factor(allsigs$bin, levels = c("Positive (+/+ or -/-)", "Negative (+/-)"))
allsigs$pairs <- paste0(allsigs$food,'_',allsigs$cazyme)
cazyme_set <- as.character(unique(allsigs$pairs))
select_cazymes <- c()
for(i in cazyme_set){
temp_data = allsigs[allsigs$pairs==i,]
if(length(unique(temp_data$bin))>1){
print(i)
select_cazymes <- c(select_cazymes,i)
}
}
selected_data <- allsigs[allsigs$pairs%in%select_cazymes,]
setwd('G:/Dan_Lab/codes/CAZyme/CAZYme_Analysis/Data_Analysis/')
food <- read.table('./data/masterdecaydiet.txt',header = T)
food$taxonomy <- as.character(food$taxonomy)
split <- strsplit(food$taxonomy,";")
foodStrings <- sapply(split,function(x) paste(x[1:2],collapse=";"))
for (i in 1:7) taxaStrings = gsub("(;[A-z]__$)?(;NA$)?","",foodStrings,perl=T) # clean tips
food_L2 <- rowsum(food[-ncol(food)],foodStrings)
rownames(food_L2) <- gsub(".*;L2_",'',rownames(food_L2))
load("./data/cazymes_to_keep.RData")
#cazyme <- read.table('./data/Cazyme_total2.txt',sep='\t',header = T,row.names = 1)
cazyme <- read.table('./data/Cazyme_total_try.txt',sep='\t',header = T,row.names = 1)
cazyme <- cazyme[cazymes_to_keep,]
cazyme <- cazyme[-grep('Other',rownames(cazyme)),]
rownames(cazyme) <- gsub(".*;L4_",'',rownames(cazyme))
map <- read.table("./maps/SampleID_map.txt", sep = "\t", header = T, comment = "")
# identify soylent samples
soylent <- map[map$UserName %in% c("MCTs11", "MCTs12"),]
soylent <- as.character(soylent$X.SampleID)
cazyme <- cazyme[,!colnames(cazyme)%in%soylent]
food_L2 <- food_L2[,!colnames(food_L2)%in%soylent]
samples <- intersect(colnames(cazyme),colnames(food_L2))
cazyme <- cazyme[samples]
food_L2 <- food_L2[samples]
cazyme_c <- as.data.frame(t(cazyme))
cazyme_c <- rownames_to_column(cazyme_c,var = 'X.SampleID')
cazyme_c <- merge(cazyme_c,map[c('X.SampleID','UserName')],by='X.SampleID')
food_c <- as.data.frame(t(food_L2))
food_c <- rownames_to_column(food_c,var='X.SampleID')
food_c <- merge(food_c,map[c('X.SampleID','UserName')],by='X.SampleID')
cazyme_food_list <- list()
selected_data <- allsigs[allsigs$pairs%in%select_cazymes,]
selected_food <- food_c[food_c$UserName%in%as.character(selected_data$id),colnames(food_c)%in%c("UserName",as.character(selected_data$food))]
selected_cazyme <- cazyme_c[cazyme_c$UserName%in%as.character(selected_data$id),colnames(cazyme_c)%in%c("UserName",as.character(selected_data$cazyme))]
selected_food <- melt(selected_food,id.vars = 'UserName',variable.name = 'food',value.name = 'weight')
selected_cazyme <- melt(selected_cazyme,id.vars = 'UserName',variable.name = 'cazyme',value.name = 'count')
#selected_plot <- merge(selected_food,selected_cazyme,by='UserName',all=F)
selected_plot <- bind_cols(selected_food,selected_cazyme)
selected_plot <- selected_plot[,names(selected_plot)!='UserName1']
g <- ggplot(selected_plot,aes(x=weight,y=count))+geom_point(aes(color=UserName))
g
selected_data <- allsigs[allsigs$pairs%in%select_cazymes,]
View(selected_data)
selected_food <- food_c[food_c$UserName%in%as.character(selected_data$id),colnames(food_c)%in%c("UserName",as.character(selected_data$food))]
selected_cazyme <- cazyme_c[cazyme_c$UserName%in%as.character(selected_data$id),colnames(cazyme_c)%in%c("UserName",as.character(selected_data$cazyme))]
View(selected_data)
selected_food <- melt(selected_food,id.vars = 'UserName',variable.name = 'food',value.name = 'weight')
selected_cazyme <- melt(selected_cazyme,id.vars = 'UserName',variable.name = 'cazyme',value.name = 'count')
#selected_plot <- merge(selected_food,selected_cazyme,by='UserName',all=F)
selected_plot <- bind_cols(selected_food,selected_cazyme)
View(selected_data)
View(selected_food)
View(selected_data)
View(food_c)
View(selected_food)
View(selected_cazyme)
View(temp_food)
View(temp_cazyme)
sigs <- lapply(cazyme_food_list, function(x) subset(x, fdr_p <= 0.2))
load('./data/cazyme_food_cor_try.RData')
sigs <- lapply(cazyme_food_list, function(x) subset(x, fdr_p <= 0.2))
allsigs <- do.call("rbind", sigs)
allsigs$cazy_cat <- ifelse(grepl('AA',allsigs$cazyme),'AA',
ifelse(grepl('CBM',allsigs$cazyme),'CBM',
ifelse(grepl('GT',allsigs$cazyme),'GT',
ifelse(grepl('GH',allsigs$cazyme),'GH',
ifelse(grepl('PL',allsigs$cazyme),'PL','CE')))))
allsigs$bin <- ifelse(allsigs$coef < 0, "Negative (+/-)",
ifelse(allsigs$coef > 0, "Positive (+/+ or -/-)", "NA"))
allsigs$bin <- factor(allsigs$bin, levels = c("Positive (+/+ or -/-)", "Negative (+/-)"))
allsigs$pairs <- paste0(allsigs$food,'_',allsigs$cazyme)
cazyme_set <- as.character(unique(allsigs$pairs))
select_cazymes <- c()
for(i in cazyme_set){
temp_data = allsigs[allsigs$pairs==i,]
if(length(unique(temp_data$bin))>1){
print(i)
select_cazymes <- c(select_cazymes,i)
}
}
selected_data <- allsigs[allsigs$pairs%in%select_cazymes,]
selected_food <- food_c[food_c$UserName%in%as.character(selected_data$id),colnames(food_c)%in%c("UserName",as.character(selected_data$food))]
selected_cazyme <- cazyme_c[cazyme_c$UserName%in%as.character(selected_data$id),colnames(cazyme_c)%in%c("UserName",as.character(selected_data$cazyme))]
selected_food <- melt(selected_food,id.vars = 'UserName',variable.name = 'food',value.name = 'weight')
selected_cazyme <- melt(selected_cazyme,id.vars = 'UserName',variable.name = 'cazyme',value.name = 'count')
View(selected_data)
load('./data/cazyme_food_cor_try.RData')
sigs <- lapply(cazyme_food_list, function(x) subset(x, fdr_p <= 0.2))
allsigs <- do.call("rbind", sigs)
allsigs$cazy_cat <- ifelse(grepl('AA',allsigs$cazyme),'AA',
ifelse(grepl('CBM',allsigs$cazyme),'CBM',
ifelse(grepl('GT',allsigs$cazyme),'GT',
ifelse(grepl('GH',allsigs$cazyme),'GH',
ifelse(grepl('PL',allsigs$cazyme),'PL','CE')))))
allsigs$bin <- ifelse(allsigs$coef < 0, "Negative (+/-)",
ifelse(allsigs$coef > 0, "Positive (+/+ or -/-)", "NA"))
allsigs$bin <- factor(allsigs$bin, levels = c("Positive (+/+ or -/-)", "Negative (+/-)"))
allsigs$pairs <- paste0(allsigs$food,'_',allsigs$cazyme)
cazyme_set <- as.character(unique(allsigs$pairs))
select_cazymes <- c()
for(i in cazyme_set){
temp_data = allsigs[allsigs$pairs==i,]
if(length(unique(temp_data$bin))>1){
print(i)
select_cazymes <- c(select_cazymes,i)
}
}
selected_data <- allsigs[allsigs$pairs%in%select_cazymes,]
View(selected_data)
View(allsigs)
food_c$UserName%in%as.character(selected_data$id)
setwd('G:/Dan_Lab/codes/CAZyme/CAZYme_Analysis/Data_Analysis/')
food <- read.table('./data/masterdecaydiet.txt',header = T)
food$taxonomy <- as.character(food$taxonomy)
split <- strsplit(food$taxonomy,";")
foodStrings <- sapply(split,function(x) paste(x[1:2],collapse=";"))
for (i in 1:7) taxaStrings = gsub("(;[A-z]__$)?(;NA$)?","",foodStrings,perl=T) # clean tips
food_L2 <- rowsum(food[-ncol(food)],foodStrings)
rownames(food_L2) <- gsub(".*;L2_",'',rownames(food_L2))
#rownames(food_L2) = sapply(strsplit(food$taxonomy,";"),function(x) paste(x[1:2],collapse=";"));
load("./data/cazymes_to_keep.RData")
cazyme <- read.table('./data/Cazyme_total2.txt',sep='\t',header = T,row.names = 1)
cazyme <- read.table('./data/Cazyme_total_try.txt',sep='\t',header = T,row.names = 1)
cazyme <- cazyme[cazymes_to_keep,]
cazyme <- cazyme[-grep('Other',rownames(cazyme)),]
rownames(cazyme) <- gsub(".*;L4_",'',rownames(cazyme))
map <- read.table("./maps/SampleID_map.txt", sep = "\t", header = T, comment = "")
# identify soylent samples
soylent <- map[map$UserName %in% c("MCTs11", "MCTs12"),]
soylent <- as.character(soylent$X.SampleID)
cazyme <- cazyme[,!colnames(cazyme)%in%soylent]
food_L2 <- food_L2[,!colnames(food_L2)%in%soylent]
samples <- intersect(colnames(cazyme),colnames(food_L2))
cazyme <- cazyme[samples]
food_L2 <- food_L2[samples]
cazyme_c <- as.data.frame(t(cazyme))
cazyme_c <- rownames_to_column(cazyme_c,var = 'X.SampleID')
cazyme_c <- merge(cazyme_c,map[c('X.SampleID','UserName')],by='X.SampleID')
food_c <- as.data.frame(t(food_L2))
food_c <- rownames_to_column(food_c,var='X.SampleID')
food_c <- merge(food_c,map[c('X.SampleID','UserName')],by='X.SampleID')
View(food_c)
selected_food <- food_c[food_c$UserName%in%as.character(selected_data$id),colnames(food_c)%in%c("UserName",as.character(selected_data$food))]
selected_cazyme <- cazyme_c[cazyme_c$UserName%in%as.character(selected_data$id),colnames(cazyme_c)%in%c("UserName",as.character(selected_data$cazyme))]
View(selected_food)
View(selected_cazyme)
selected_cazyme <- melt(selected_cazyme,id.vars = 'UserName',variable.name = 'cazyme',value.name = 'count')
View(selected_cazyme)
selected_cazyme <- cazyme_c[cazyme_c$UserName%in%as.character(selected_data$id),colnames(cazyme_c)%in%c("UserName",as.character(selected_data$cazyme))]
selected_food <- melt(selected_food,id.vars = 'UserName',variable.name = 'food',value.name = 'weight')
selected_cazyme <- melt(selected_cazyme,id.vars = 'UserName',variable.name = 'cazyme',value.name = 'count')
#selected_plot <- merge(selected_food,selected_cazyme,by='UserName',all=F)
selected_plot <- cbind(selected_food,selected_cazyme)
selected_food <- list()
print(i)
for(i in unique(selected_data$food)){
print(i)
}
selected_food[[i]] <- subset(selected_data,selected_data$food==i)
for(i in unique(selected_data$food)){
print(i)
selected_food[[i]] <- subset(selected_data,selected_data$food==i)
}
View(selected_food)
selected_food_df <- list()
for(i in unique(selected_data$food)){
print(i)
selected_food_df[[i]] <- subset(selected_data,selected_data$food==i)
}
selected_data <- list()
selected_data <- allsigs[allsigs$pairs%in%select_cazymes,]
selected_food_df <- list()
for(i in unique(selected_data$food)){
print(i)
selected_food_df[[i]] <- subset(selected_data,selected_data$food==i)
}
selected_food <- list()
selected_food <- lapply(selected_food_df,function(x){
food_c[food_c$UserName%in%as.character(x$id),colnames(food_c)%in%c("UserName",as.character(x$food))]
})
View(selected_food)
selected_food[["Citrus_fruits_juices"]][["Citrus_fruits_juices"]]
selected_food <- list()
selected_food <- lapply(selected_food_df,function(x){
food_c[food_c$UserName%in%as.character(x$id),colnames(food_c)%in%c("UserName",as.character(x$food))] %>%
melt(id.vars = 'UserName',variable.name = 'food',value.name = 'weight')
})
View(selected_food)
food_c$UserName <- as.character(food_c$UserName)
cazyme_c$UserName <- as.character(cazyme_c$UserName)
selected_food <- list()
selected_food <- lapply(selected_food_df,function(x){
food_c[food_c$UserName%in%as.character(x$id),colnames(food_c)%in%c("UserName",as.character(x$food))] %>%
melt(id.vars = 'UserName',variable.name = 'food',value.name = 'weight')
})
selected_cazyme <- list()
selected_cazyme <- list()
selected_cazyme <- lapply(selected_food_df,function(x){
cazyme_c[cazyme_c$UserName%in%as.character(x$id),colnames(cazyme_c)%in%c("UserName",as.character(x$cazyme))] %>%
melt(id.vars = 'UserName',variable.name = 'cazyme',value.name = 'weight')
})
View(selected_cazyme)
selected_food <- list()
selected_food <- lapply(selected_food_df,function(x){
food_c[food_c$UserName%in%as.character(x$id),colnames(food_c)%in%c("UserName",as.character(x$food))] %>%
melt(id.vars = 'UserName',variable.name = 'food',value.name = 'weight')
})
selected_cazyme <- list()
selected_cazyme <- lapply(selected_food_df,function(x){
cazyme_c[cazyme_c$UserName%in%as.character(x$id),colnames(cazyme_c)%in%c("UserName",as.character(x$cazyme))] %>%
melt(id.vars = 'UserName',variable.name = 'cazyme',value.name = 'count')
})
food_c$UserName <- as.character(food_c$UserName)
cazyme_c$UserName <- as.character(cazyme_c$UserName)
selected_food <- list()
selected_food <- lapply(selected_food_df,function(x){
food_c[food_c$UserName%in%as.character(x$id),colnames(food_c)%in%c("UserName",as.character(x$food))] %>%
melt(id.vars = 'UserName',variable.name = 'food',value.name = 'weight')
})
selected_cazyme <- list()
selected_cazyme <- lapply(selected_food_df,function(x){
cazyme_c[cazyme_c$UserName%in%as.character(x$id),colnames(cazyme_c)%in%c("UserName",as.character(x$cazyme))] %>%
melt(id.vars = 'UserName',variable.name = 'cazyme',value.name = 'count')
})
food_c$UserName <- as.character(food_c$UserName)
cazyme_c$UserName <- as.character(cazyme_c$UserName)
selected_food <- list()
selected_food <- lapply(selected_food_df,function(x){
food_c[food_c$UserName%in%as.character(x$id),colnames(food_c)%in%c("UserName",as.character(x$food))] %>%
melt(id.vars = 'UserName',variable.name = 'food',value.name = 'weight')
})
selected_food[["Citrus_fruits_juices"]]
selected_cazyme[["Citrus_fruits_juices"]]
selected_food[["Citrus_fruits_juices"]]
temp_data = selected_data[selected_data$food==i,]
View(temp_data)
selected_food_df <- list()
for(i in unique(selected_data$pairs)){
print(i)
selected_food_df[[i]] <- subset(selected_data,selected_data$pairs==i)
}
View(selected_food_df)
food_c$UserName <- as.character(food_c$UserName)
cazyme_c$UserName <- as.character(cazyme_c$UserName)
selected_food <- list()
selected_food <- lapply(selected_food_df,function(x){
food_c[food_c$UserName%in%as.character(x$id),colnames(food_c)%in%c("UserName",as.character(x$food))] %>%
melt(id.vars = 'UserName',variable.name = 'food',value.name = 'weight')
})
selected_cazyme <- list()
selected_cazyme <- lapply(selected_food_df,function(x){
cazyme_c[cazyme_c$UserName%in%as.character(x$id),colnames(cazyme_c)%in%c("UserName",as.character(x$cazyme))] %>%
melt(id.vars = 'UserName',variable.name = 'cazyme',value.name = 'count')
})
View(selected_data)
View(selected_food)
View(selected_cazyme)
names(selected_food_df[[1]])
selected_food_df[[1]]
selected_food_df[1]
selected_cazyme_plot <- do.call("rbind", selected_cazyme)
View(selected_cazyme_plot)
selected_food_plot <- do.call("rbind", selected_food)
View(selected_food_plot)
#selected_plot <- merge(selected_food,selected_cazyme,by='UserName',all=F)
selected_plot <- cbind(selected_food_plot,selected_cazyme_plot)
View(selected_plot)
#selected_plot <- merge(selected_food,selected_cazyme,by='UserName',all=F)
selected_plot <- bind_cols(selected_food_plot,selected_cazyme_plot)
selected_plot <- selected_plot[,names(selected_plot)!='UserName1']
g <- ggplot(selected_plot,aes(x=weight,y=count))+geom_point(aes(color=UserName))+
facet_grid(cazyme~weight)
g
unique(selected_plot$food)
#Citrus_fruits_juices
plot1 <- subset(selected_plot,selected_plot$food='Citrus_fruits_juices')
#Citrus_fruits_juices
plot1 <- subset(selected_plot,selected_plot$food=='Citrus_fruits_juices')
View(plot1)
g <- ggplot(plot1,aes(x=weight,y=count))+geom_point(aes(color=UserName))
g
g <- ggplot(plot1,aes(x=weight,y=count))+geom_point(aes(color=UserName))+
facet_grid(~UserName)
g
g <- ggplot(plot1,aes(x=weight,y=count))+geom_point(aes(color=UserName,alpha=0.8))+
facet_grid(~UserName)
g
plot1 <- subset(selected_plot,selected_plot$UserName!='MCTs05')
g <- ggplot(plot1,aes(x=weight,y=count))+geom_point(aes(color=UserName,alpha=0.8))+
facet_grid(~UserName)
g
g <- ggplot(plot1,aes(x=weight,y=count))+geom_point(aes(color=UserName,alpha=0.8))+
facet_grid(~UserName,scales = 'free_x')
g
#Citrus_fruits_juices
plot1 <- subset(selected_plot,selected_plot$food=='Citrus_fruits_juices')
plot1 <- subset(plot1,selected_plot$UserName!='MCTs05')
g <- ggplot(plot1,aes(x=weight,y=count))+geom_point(aes(color=UserName,alpha=0.8))+
facet_grid(~UserName,scales = 'free_x')
g
#Citrus_fruits_juices
plot1 <- subset(selected_plot,selected_plot$food=='Citrus_fruits_juices')
plot1 <- subset(plot1,selected_plot$UserName!='MCTs05')
#Citrus_fruits_juices
plot1 <- mutate_if(is.factor,as.character)
#Citrus_fruits_juices
plot1 <- mutate_if(plot1,is.factor,as.character)
plot1 <- subset(selected_plot,selected_plot$food=='Citrus_fruits_juices')
plot1 <- subset(plot1,selected_plot$UserName!='MCTs05')
g <- ggplot(plot1,aes(x=weight,y=count))+geom_point(aes(color=UserName,alpha=0.8))+
facet_grid(~UserName,scales = 'free_x')
g
#Citrus_fruits_juices
plot1 <- mutate_if(plot1,is.factor,as.character)
plot1
selected_plot <- mutate_if(selected_plot,is.factor,as.character)
unique(selected_plot$food)
#Citrus_fruits_juices
plot1 <- subset(selected_plot,selected_plot$food=='Citrus_fruits_juices')
plot1 <- subset(plot1,selected_plot$UserName!='MCTs05')
g <- ggplot(plot1,aes(x=weight,y=count))+geom_point(aes(color=UserName,alpha=0.8))+
facet_grid(~UserName,scales = 'free_x')
g
selected_plot <- mutate_if(selected_plot,is.factor,as.character)
View(selected_plot)
unique(selected_plot$food)
#Citrus_fruits_juices
plot1 <- subset(selected_plot,selected_plot$food=='Citrus_fruits_juices')
View(plot1)
plot1 <- subset(plot1,selected_plot$UserName!='MCTs05')
#Citrus_fruits_juices
plot1 <- subset(selected_plot,selected_plot$food=='Citrus_fruits_juices')
plot1 <- filter(plot1,selected_plot$UserName!='MCTs05')
plot1 <- filter(plot1,plot1$UserName=='MCTs05')
plot1 <- filter(plot1,plot1$UserName!='MCTs05')
g <- ggplot(plot1,aes(x=weight,y=count))+geom_point(aes(color=UserName,alpha=0.8))+
facet_grid(~UserName,scales = 'free_x')
#Citrus_fruits_juices
plot1 <- subset(selected_plot,selected_plot$food=='Citrus_fruits_juices')
plot1 <- filter(plot1,plot1$UserName!='MCTs05')
g <- ggplot(plot1,aes(x=weight,y=count))+geom_point(aes(color=UserName,alpha=0.8))+
facet_grid(~UserName,scales = 'free_x')
g
g <- ggplot(plot1,aes(x=weight,y=count))+geom_point(aes(color=UserName),alpha=0.8)+
facet_grid(~UserName,scales = 'free_x')
g
